# use extract to semi-construct a new result

s := io.stdout();

(l1,l2,l3,l4,l5,l6,l7) := json.shred("[{\"id\":1,\"name\":\"Fabian\",\"data\":[0,2,true,null]},{\"id\":2,\"name\":\"Niels\"},{\"id\":3,\"name\":\"Martin\",\"data\":null}]");
json.print(s, l1,l2,l3,l4,l5,l6,l7, 0@0, true);

(r1,r2,r3,r4,r5,r6,r7) := json.shred("[{\"userid\":2,\"prj\":\"sql\"},{\"userid\":1,\"prj\":[\"merovingian\",\"jdbc\",\"jacqueline\"]}]");
json.print(s, r1,r2,r3,r4,r5,r6,r7, 0@0, true);

elems := bat.new(:oid, :oid);
elems := bat.insert(elems, 1@0, 4@0);
elems := bat.insert(elems, 9@0, 1@0);

(r1,r2,r3,r4,r5,r6,r7) := json.extract(r1,r2,r3,r4,r5,r6,r7,elems,0@0);
json.print(s, r1,r2,r3,r4,r5,r6,r7, 0@0, true);

elems := bat.reverse(elems);

lastid := json.nextid(r1);

(l1,l2,l3,l4,l5,l6,l7) := json.extract(l1,l2,l3,l4,l5,l6,l7,elems,lastid);
json.print(s, l1,l2,l3,l4,l5,l6,l7, lastid, true);

# objects from l and r, order should match elems and be equal to elemes
# if startoid is 0@0
o5 := bat.reverse(l5);
lo := algebra.select(o5, lastid);

o5 := bat.reverse(r5);
ro := algebra.select(o5, 0@0);

# remove old outer arrays
cleanup := bat.new(:oid, :oid);
cleanup := bat.insert(cleanup, 0@0, nil:oid);
cleanup := bat.insert(cleanup, lastid, nil:oid);
l5 := algebra.kdifference(l5, cleanup);
r5 := algebra.kdifference(r5, cleanup);

# get next id for new objects to create
lastid := json.nextid(l1);

# create objects
ln := algebra.project(lo, "l");
l7 := bat.insert(l7, ln);
rn := algebra.project(ro, "r");
r7 := bat.insert(r7, rn);

lo := algebra.markT(lo, lastid);
lo := bat.reverse(lo);
l6 := bat.insert(l6, lo);
ro := algebra.markT(ro, lastid);
ro := bat.reverse(ro);
r6 := bat.insert(r6, ro);

# their kind entries
kind := algebra.project(ro, 111:bte); # 'o'

# and the outermost array
objs := algebra.project(ro, 0@0);
objs := bat.reverse(objs);

# merge everything
r1 := bat.insert(r1, l1);
r1 := bat.insert(r1, kind);
r2 := bat.insert(r2, l2);
r3 := bat.insert(r3, l3);
r4 := bat.insert(r4, l4);
r5 := bat.insert(r5, l5);
r5 := bat.insert(r5, objs);
r6 := bat.insert(r6, l6);
r7 := bat.insert(r7, l7);

json.print(s, r1,r2,r3,r4,r5,r6,r7, 0@0, true);
