stdout of test 'json00` in directory 'monetdb5/extras/jaql` itself:


# 11:20:37 >  
# 11:20:37 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/net/sofia.ins.cwi.nl/export/scratch1/fabian/tmp/mtest-jacqueline-sofia.ins.cwi.nl/five/dbfarm" "--set" "mapi_open=true" "--set" "mapi_port=39682" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_extras_jaql" "json00.mal"
# 11:20:37 >  

# MonetDB 5 server v11.8.0 "jacqueline-497cf791babb+"
# Serving database 'mTests_extras_jaql', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.662 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://sofia.ins.cwi.nl:39682/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/DataCell module not loaded: MALException:jaql.context:JAQL environment not found
function user.main():void;
    s := io.stdout();
    (j1,j2,j3,j4,j5,j6,j7) := json.shred("[ 1,3, 5]");
    json.print(s,j1,j2,j3,j4,j5,j6,j7);
    (j1,j2,j3,j4,j5,j6,j7) := json.shred("[\"hello\",\"world\"]");
    json.print(s,j1,j2,j3,j4,j5,j6,j7);
    (j1,j2,j3,j4,j5,j6,j7) := json.shred("[ { \"key\": \"value\", \"key2\": 5.3 }, null, 4, true ]");
    json.print(s,j1,j2,j3,j4,j5,j6,j7);
    (j1,j2,j3,j4,j5,j6,j7) := json.shred("[{\"from\":101,\"to\":[20,81,94],\"ts\":1234567,\"msg\":\"Hello world!\"}]");
    json.print(s,j1,j2,j3,j4,j5,j6,j7);
# this shouldn't exist 
    (i1,i2,i3,i4,i5,i6,i7) := json.load("demo");
catch MALException:str ;
    io.printf("!%s\n",MALException);
exit MALException:str ;
    json.store("demo",j1,j2,j3,j4,j5,j6,j7);
    (i1,i2,i3,i4,i5,i6,i7) := json.load("demo");
    json.print(s,i1,i2,i3,i4,i5,i6,i7);
# reload again, to check if this works as expected 
    (i1,i2,i3,i4,i5,i6,i7) := json.load("demo");
    json.print(s,i1,i2,i3,i4,i5,i6,i7);
    json.drop("demo");
# this should no longer exist 
    (i1,i2,i3,i4,i5,i6,i7) := json.load("demo");
catch MALException:str ;
    io.printf("!%s\n",MALException);
exit MALException:str ;
end main;
[ 1, 3, 5 ]
[ "hello", "world" ]
[ { "key": "value", "key2": 5.300000 }, null, 4, true ]
[ { "from": 101, "to": [ 20, 81, 94 ], "ts": 1234567, "msg": "Hello world!" } ]
!MALException:json.load:no such JSON object with name: demo
[ { "from": 101, "to": [ 20, 81, 94 ], "ts": 1234567, "msg": "Hello world!" } ]
[ { "from": 101, "to": [ 20, 81, 94 ], "ts": 1234567, "msg": "Hello world!" } ]
!MALException:json.load:no such JSON object with name: demo

# 11:20:37 >  
# 11:20:37 >  "Done."
# 11:20:37 >  

