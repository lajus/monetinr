stdout of test 'json02` in directory 'monetdb5/extras/jaql` itself:


# 22:47:09 >  
# 22:47:09 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/net/sofia.ins.cwi.nl/export/scratch1/fabian/tmp/mtest-jacqueline-sofia.ins.cwi.nl/five/dbfarm" "--set" "mapi_open=true" "--set" "mapi_port=33699" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_extras_jaql" "json02.mal"
# 22:47:09 >  

# MonetDB 5 server v11.8.0 "jacqueline-0c67cb41e11b+"
# Serving database 'mTests_extras_jaql', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.662 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://sofia.ins.cwi.nl:33699/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/DataCell module not loaded: MALException:jaql.context:JAQL environment not found
function user.main():void;
# test extraction (cleanup) 
    s := io.stdout();
    (j1,j2,j3,j4,j5,j6,j7) := json.shred("[\"hello\",{\"world\":[0,2,true,null]}]");
    json.print(s,j1,j2,j3,j4,j5,j6,j7);
    elem0 := bat.new(:oid,:oid);
    elem0 := bat.insert(elem0,0@0,0@0);
    (k1,k2,k3,k4,k5,k6,k7) := json.extract(j1,j2,j3,j4,j5,j6,j7,elem0,0@0);
    json.print(s,k1,k2,k3,k4,k5,k6,k7);
    elem1 := bat.new(:oid,:oid);
    elem1 := bat.insert(elem1,0@0,1@0);
    (k1,k2,k3,k4,k5,k6,k7) := json.extract(j1,j2,j3,j4,j5,j6,j7,elem1,0@0);
    json.print(s,k1,k2,k3,k4,k5,k6,k7);
    elem2 := bat.new(:oid,:oid);
    elem2 := bat.insert(elem2,0@0,2@0);
    (k1,k2,k3,k4,k5,k6,k7) := json.extract(j1,j2,j3,j4,j5,j6,j7,elem2,0@0);
    json.print(s,k1,k2,k3,k4,k5,k6,k7);
    elem3 := bat.new(:oid,:oid);
    elem3 := bat.insert(elem3,0@0,1@0);
    elem3 := bat.insert(elem3,0@0,3@0);
    (k1,k2,k3,k4,k5,k6,k7) := json.extract(j1,j2,j3,j4,j5,j6,j7,elem3,0@0);
    json.print(s,k1,k2,k3,k4,k5,k6,k7);
    elem4 := bat.new(:oid,:oid);
    elem4 := bat.insert(elem4,0@0,1@0);
    elem4 := bat.insert(elem4,0@0,nil:oid);
    (k1,k2,k3,k4,k5,k6,k7) := json.extract(j1,j2,j3,j4,j5,j6,j7,elem4,0@0);
    json.print(s,k1,k2,k3,k4,k5,k6,k7);
end main;
[ "hello", { "world": [ 0, 2, true, null ] } ]
[ [ "hello", { "world": [ 0, 2, true, null ] } ] ]
[ "hello" ]
[ { "world": [ 0, 2, true, null ] } ]
[ "hello", [ 0, 2, true, null ] ]
[ "hello" ]

# 22:47:10 >  
# 22:47:10 >  "Done."
# 22:47:10 >  

