stdout of test 'CMexample` in directory 'monetdb5/optimizer` itself:


# 08:55:26 >  
# 08:55:26 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=38095 --set monet_prompt= --trace --dbname=mTests_src_optimizer  CMexample.mal < /dev/null
# 08:55:26 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.main():void;
# Cost model example 
    r := bat.new(:oid,:int);
    s := bat.new(:oid,:int);
    rs := algebra.select(s,1,1);
    rr := bat.reverse(r);
    j := algebra.join(rs,rr);
    mdb.List();
end main;
function user.main():void;              #  0 main:void := user.main() {G}
# Cost model example 
    r{rows=100} := bat.new(:oid,:int);  #  2 r:bat[:oid,:int] := CMDBATnew(_4:oid, _5:int) {G}
    s{rows=1000} := bat.new(:oid,:int); #  3 s:bat[:oid,:int] := CMDBATnew(_4:oid, _8:int) {G}
    rs{rows=501} := algebra.select(s{rows=1000},1,1);#  4 rs:bat[:oid,:int] := ALGselect(s:bat[:oid,:int], _10:int, _10:int) {G}
    rr{rows=100} := bat.reverse(r{rows=100});#  5 rr:bat[:int,:oid] := BKCreverse(r:bat[:oid,:int]) {G}
    j{rows=100} := algebra.join(rs{rows=501},rr{rows=100});#  6 j:bat[:oid,:oid] := ALGjoin(rs:bat[:oid,:int], rr:bat[:int,:oid]) {G}
    mdb.List();                         #  7 _14:void := MDBlistDetail() 
end main;                               #  8  

# 08:55:26 >  
# 08:55:26 >  Done.
# 08:55:26 >  

