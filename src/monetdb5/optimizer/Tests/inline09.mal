
# remapping inline functions
function foo{inline}(a:str):str;
	a:= str.replace(a,"A","");
	a:= str.replace(a,"E","");
	a:= str.replace(a,"I","");
	a:= str.replace(a,"O","");
	a:= str.replace(a,"U","");
	a:= str.replace(a," ","");
	return foo:=a;
end foo;

function bar{inline}(a:str,b:str):str;
	sa:= user.foo(a);
	sa:= str.substring(sa, 1, 5);
	sb:= user.foo(b);
	sb:= str.substring(sb, 1, 3);
	c:= sa+sb;
	return bar:=c;
end bar;

function qry();
	b:= bat.new(:oid,:str);
	bat.insert(b,0@0,"2");
	z:bat[:oid,:str]:= mal.multiplex("user","bar",b,b);
end qry;

	optimizer.inline("user","qry");
	optimizer.remap("user","qry");
	mdb.List("user","qry");
