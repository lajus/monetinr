stdout of test 'tst4820` in directory 'monetdb5/optimizer` itself:


# 23:29:21 >  
# 23:29:21 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=36979 --set sql_port=46143 --set xquery_port=58679 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4820.mal < /dev/null
# 23:29:21 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.f():void;
    i := 0;
barrier go := true;
# remove from disk 
    a:bat[:oid,:dbl]  := bbp.bind("P_bat");
    bat.setPersistent(a,false);
    transaction.commit();
# alter the values 
    a:bat[:oid,:dbl]  := batcalc.+(a,1:dbl);
# store it to disk with the same name 
    bat.setName(a,"P_bat");
    bat.setPersistent(a,true);
    transaction.commit();
    redo go := calc.<(i,2);
exit go;
end f;
function user.main():void;
#bug from Roberto to check carefull strength reduction 
    mdb.List("user","f");
end main;
function user.f():void;                 #  0 f:void := user.f() {G}
# remove from disk 
# alter the values 
    i := 0;                             #  3 i:int := _2:int 
barrier go := true;                     #  4 go:bit := _4:bit {J14}
    a:bat[:oid,:dbl]  := bbp.bind("P_bat");#  5 a:bat[:oid,:dbl] := CMDbbpbind(_7:str) {G}
    bat.setPersistent(a,false);         #  6 _8:void := BKCpersists(a:bat[:oid,:dbl], _9:bit) {G}
    transaction.commit();               #  7 _10:bit := TRNglobal_commit() 
    a:bat[:oid,:dbl]  := batcalc.+(a,1:dbl);#  8 a:bat[:oid,:dbl] := CMDbatADDsignal(a:bat[:oid,:dbl], _12:dbl) {G}
# store it to disk with the same name 
    bat.setName(a,"P_bat");             # 10 _14:void := BKCsetName(a:bat[:oid,:dbl], _7:str) {G}
    bat.setPersistent(a,true);          # 11 _15:void := BKCpersists(a:bat[:oid,:dbl], _4:bit) {G}
    transaction.commit();               # 12 _16:bit := TRNglobal_commit() 
    redo go := calc.<(i,2);             # 13 go:bit := CMDvarLT(i:int, _17:int) {J3}
exit go;                                # 14 go:bit 
end f;                                  # 15  

# 23:29:21 >  
# 23:29:21 >  Done.
# 23:29:21 >  

