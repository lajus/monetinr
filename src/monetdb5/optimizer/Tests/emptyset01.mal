#beware that the ESoptimizer does not remove the type of MALException
function do{inline}(V1:bat[:oid,:oid]);
barrier (x,z):= iterator.new(V1);
	io.print("loop");
catch MALException:str;
	io.print(MALException);
exit MALException;
exit(x,z);
end do;

function tst();
    V1 := bat.new(:oid,:oid);
    V7 := bat.new(:oid,:oid);
    V10{rows=0:lng} := bat.new(:oid,:oid);
    V11 := bat.reverse(V10);
    V12 := algebra.kdifference(V7,V11);
    V16 := algebra.markT(V12);
    V17 := algebra.join(V16,V7);
    bat.append(V1,V17);
	do(V1);
	io.print("done");
end tst;
    optimizer.inline("user","tst");
    optimizer.costModel("user","tst");
    optimizer.emptySet("user","tst");
	mdb.List("user","tst");
