stdout of test 'tst4900` in directory 'monetdb5/optimizer` itself:


# 23:53:01 >  
# 23:53:01 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4900.mal </dev/null
# 23:53:01 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:31365/




function user.f1(s:str):void;
    t1:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");
    t2 := array.grid(132000,8,1,0);
    t3 := array.grid(1,100,10560,0);
#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot 
    t4 := array.grid(1,100,10560,0,8);
    t5 := batcalc.+(t2,t4);
    t6 := batcalc.oid(t5);
    t7 := algebra.join(t6,t1);
    t8 := calc.dbl(1);
    t9 := calc.dbl(2);
    t10 := calc.dbl(3.1415);
    t11 := calc.*(t9,t10);
    t12 := calc.dbl(14);
    t13 := mmath.pow(t11,t12);
    t14 := mmath.sqrt(t13);
    t15 := calc.dbl(t14);
    t16:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");
    t17 := array.grid(800,14,1,0);
    t18 := array.grid(100,8,14,0);
    t19 := array.grid(1,100,112,0);
#t20 := batcalc.*(8,t19); 
    t20 := array.grid(1,100,112,0,8);
    t21 := batcalc.+(t18,t20);
    t22 := batcalc.*(14,t21);
    t23 := batcalc.+(t17,t22);
    t24 := batcalc.oid(t23);
    t25 := algebra.join(t24,t16);
    t30 := batcalc.oid(t21);
    t31 := array.grid(1,800,1,0);
    t32 := aggr.prod(t25,t30,t31);
    t33 := batcalc.*(t15,t32);
    t34 := batcalc./(t8,t33);
    t40 := algebra.join(t6,t34);
    t41 := calc.dbl(-0.5);
#t42:bat[:oid,:dbl] := bbp.bind("Query_14x1320"); 
    t42:bat[:oid,:dbl]  := bbp.bind(s);
    t43 := array.grid(1056000,14,1,0);
    t44 := array.grid(100,1320,112,0);
#t45 := batcalc.*(14,t44); 
    t45 := array.grid(100,1320,112,0,14);
    t46 := batcalc.+(t43,t45);
    t47 := batcalc.oid(t46);
    t48 := algebra.join(t47,t42);
    t49:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");
    t51 := array.grid(132000,8,14,0);
    t52 := array.grid(1,100,147840,0);
#t53 := batcalc.*(8,t52); 
    t53 := array.grid(1,100,147840,0,8);
    t54 := batcalc.+(t51,t53);
    t55 := batcalc.*(14,t54);
    t56 := batcalc.+(t43,t55);
    t57 := batcalc.oid(t56);
    t58 := algebra.join(t57,t49);
    t59 := batcalc.-(t48,t58);
#t61 := batcalc.pow(t59,t9); 
    t61 := batcalc.*(t59,t59);
    t71 := algebra.join(t57,t16);
    t72 := batcalc./(t61,t71);
    t76 := batcalc.*(1320,t52);
    t77 := batcalc.+(t44,t76);
    t78 := batcalc.*(8,t77);
    t79 := batcalc.+(t51,t78);
    t80 := batcalc.oid(t79);
    t81 := array.grid(1,1056000,1,0);
    t82 := aggr.sum(t72,t80,t81);
    t83 := batcalc.*(t41,t82);
    t84 := batmmath.exp(t83);
    t85 := batcalc.*(t40,t84);
    t86 := batcalc.*(t7,t85);
#t87 := array.grid(100,1320,8,0); will save 30% by reuse 
    t87 := array.grid(t81,100,1320,8,0);
    t89 := batcalc.*(1320,t3);
    t90 := batcalc.+(t87,t89);
    t91 := batcalc.oid(t90);
    t92 := array.grid(1,132000,1,0);
    t93 := aggr.sum(t86,t91,t92);
    t94 := batmmath.log(t93);
    t95 := array.grid(1,100,1320,0);
    t96 := batcalc.oid(t95);
    t97 := array.grid(1,100,1,0);
    t98 := aggr.sum(t94,t96,t97);
    top := t98;
    io.table(t97,top);
end f1;
function user.main():void;
    mdb.List("user","f1");
##f1(); 
end main;
factory user.f1(s:str):void;            #  0 f1:void := user.f1(s:str) {G}
    t1:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");#  1 t1:bat[:oid,:dbl] := CMDbbpbind(_3:str) {G}
    t2 := array.grid(132000,8,1,0);     #  2 t2:bat[:oid,:int] := ARRAYgrid_int(_5:int, _6:int, _7:int, _8:int) {G}
    t3 := array.grid(1,100,10560,0);    #  3 t3:bat[:oid,:int] := ARRAYgrid_int(_7:int, _10:int, _11:int, _8:int) {G}
#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot 
    t4 := array.grid(1,100,10560,0,8);  #  5 t4:bat[:oid,:int] := ARRAYgridShift_int(_7:int, _10:int, _11:int, _8:int, _6:int) {G}
    t5 := batcalc.+(t2,t4);             #  6 t5:bat[:oid,:int] := CMDbatADDsignal(t2:bat[:oid,:int], t4:bat[:oid,:int]) {G}
    t6 := batcalc.oid(t5);              #  7 t6:bat[:oid,:oid] := CMDconvertsignal_oid(t5:bat[:oid,:int]) {G}
    t7 := algebra.join(t6,t1);          #  8 t7:bat[:oid,:dbl] := ALGjoin(t6:bat[:oid,:oid], t1:bat[:oid,:dbl]) {G}
    t8 := calc.dbl(1);                  #  9 t8:dbl := CMDvarCONVERT(_18:flt) 
    t9 := calc.dbl(2);                  # 10 t9:dbl := CMDvarCONVERT(_20:flt) 
    t10 := calc.dbl(3.1415);            # 11 t10:dbl := CMDvarCONVERT(_22:flt) 
    t11 := calc.*(t9,t10);              # 12 t11:dbl := CMDvarMULsignal(t9:dbl, t10:dbl) 
    t12 := calc.dbl(14);                # 13 t12:dbl := CMDvarCONVERT(_25:flt) 
    t13 := mmath.pow(t11,t12);          # 14 t13:dbl := MATHbinary_POWdbl(t11:dbl, t12:dbl) 
    t14 := mmath.sqrt(t13);             # 15 t14:dbl := MATHunary_SQRTdbl(t13:dbl) 
    t15 := calc.dbl(t14);               # 16 t15:dbl := CMDvarCONVERT(t14:dbl) 
    t16:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");# 17 t16:bat[:oid,:dbl] := CMDbbpbind(_30:str) {G}
    t17 := array.grid(800,14,1,0);      # 18 t17:bat[:oid,:int] := ARRAYgrid_int(_32:int, _33:int, _7:int, _8:int) {G}
    t18 := array.grid(100,8,14,0);      # 19 t18:bat[:oid,:int] := ARRAYgrid_int(_10:int, _6:int, _33:int, _8:int) {G}
    t19 := array.grid(1,100,112,0);     # 20 t19:bat[:oid,:int] := ARRAYgrid_int(_7:int, _10:int, _36:int, _8:int) {G}
#t20 := batcalc.*(8,t19); 
    t20 := array.grid(1,100,112,0,8);   # 22 t20:bat[:oid,:int] := ARRAYgridShift_int(_7:int, _10:int, _36:int, _8:int, _39:int) {G}
    t21 := batcalc.+(t18,t20);          # 23 t21:bat[:oid,:int] := CMDbatADDsignal(t18:bat[:oid,:int], t20:bat[:oid,:int]) {G}
    t22 := batcalc.*(14,t21);           # 24 t22:bat[:oid,:int] := CMDbatMULsignal(_33:int, t21:bat[:oid,:int]) {G}
    t23 := batcalc.+(t17,t22);          # 25 t23:bat[:oid,:int] := CMDbatADDsignal(t17:bat[:oid,:int], t22:bat[:oid,:int]) {G}
    t24 := batcalc.oid(t23);            # 26 t24:bat[:oid,:oid] := CMDconvertsignal_oid(t23:bat[:oid,:int]) {G}
    t25 := algebra.join(t24,t16);       # 27 t25:bat[:oid,:dbl] := ALGjoin(t24:bat[:oid,:oid], t16:bat[:oid,:dbl]) {G}
    t30 := batcalc.oid(t21);            # 28 t30:bat[:oid,:oid] := CMDconvertsignal_oid(t21:bat[:oid,:int]) {G}
    t31 := array.grid(1,800,1,0);       # 29 t31:bat[:oid,:int] := ARRAYgrid_int(_47:int, _32:int, _47:int, _48:int) {G}
    t32 := aggr.prod(t25,t30,t31);      # 30 t32:bat[:oid,:dbl] := AGGRprod3_dbl(t25:bat[:oid,:dbl], t30:bat[:oid,:oid], t31:bat[:oid,:int]) {G}
    t33 := batcalc.*(t15,t32);          # 31 t33:bat[:oid,:dbl] := CMDbatMULsignal(t15:dbl, t32:bat[:oid,:dbl]) {G}
    t34 := batcalc./(t8,t33);           # 32 t34:bat[:oid,:dbl] := CMDbatDIVsignal(t8:dbl, t33:bat[:oid,:dbl]) {G}
    t40 := algebra.join(t6,t34);        # 33 t40:bat[:oid,:dbl] := ALGjoin(t6:bat[:oid,:oid], t34:bat[:oid,:dbl]) {G}
    t41 := calc.dbl(-0.5);              # 34 t41:dbl := CMDvarCONVERT(_54:flt) 
#t42:bat[:oid,:dbl] := bbp.bind("Query_14x1320"); 
    t43 := array.grid(1056000,14,1,0);  # 36 t43:bat[:oid,:int] := ARRAYgrid_int(_58:int, _33:int, _47:int, _48:int) {G}
    t44 := array.grid(100,1320,112,0);  # 37 t44:bat[:oid,:int] := ARRAYgrid_int(_60:int, _61:int, _36:int, _48:int) {G}
#t45 := batcalc.*(14,t44); 
    t45 := array.grid(100,1320,112,0,14);# 39 t45:bat[:oid,:int] := ARRAYgridShift_int(_60:int, _61:int, _36:int, _48:int, _33:int) {G}
    t46 := batcalc.+(t43,t45);          # 40 t46:bat[:oid,:int] := CMDbatADDsignal(t43:bat[:oid,:int], t45:bat[:oid,:int]) {G}
    t47 := batcalc.oid(t46);            # 41 t47:bat[:oid,:oid] := CMDconvertsignal_oid(t46:bat[:oid,:int]) {G}
    t49:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");# 42 t49:bat[:oid,:dbl] := CMDbbpbind(_68:str) {G}
    t51 := array.grid(132000,8,14,0);   # 43 t51:bat[:oid,:int] := ARRAYgrid_int(_70:int, _39:int, _71:int, _48:int) {G}
    t52 := array.grid(1,100,147840,0);  # 44 t52:bat[:oid,:int] := ARRAYgrid_int(_47:int, _60:int, _73:int, _48:int) {G}
#t53 := batcalc.*(8,t52); 
    t53 := array.grid(1,100,147840,0,8);# 46 t53:bat[:oid,:int] := ARRAYgridShift_int(_47:int, _60:int, _73:int, _48:int, _76:int) {G}
    t54 := batcalc.+(t51,t53);          # 47 t54:bat[:oid,:int] := CMDbatADDsignal(t51:bat[:oid,:int], t53:bat[:oid,:int]) {G}
    t55 := batcalc.*(14,t54);           # 48 t55:bat[:oid,:int] := CMDbatMULsignal(_71:int, t54:bat[:oid,:int]) {G}
    t56 := batcalc.+(t43,t55);          # 49 t56:bat[:oid,:int] := CMDbatADDsignal(t43:bat[:oid,:int], t55:bat[:oid,:int]) {G}
    t57 := batcalc.oid(t56);            # 50 t57:bat[:oid,:oid] := CMDconvertsignal_oid(t56:bat[:oid,:int]) {G}
    t58 := algebra.join(t57,t49);       # 51 t58:bat[:oid,:dbl] := ALGjoin(t57:bat[:oid,:oid], t49:bat[:oid,:dbl]) {G}
#t61 := batcalc.pow(t59,t9); 
    t71 := algebra.join(t57,t16);       # 53 t71:bat[:oid,:dbl] := ALGjoin(t57:bat[:oid,:oid], t16:bat[:oid,:dbl]) {G}
    t76 := batcalc.*(1320,t52);         # 54 t76:bat[:oid,:int] := CMDbatMULsignal(_61:int, t52:bat[:oid,:int]) {G}
    t77 := batcalc.+(t44,t76);          # 55 t77:bat[:oid,:int] := CMDbatADDsignal(t44:bat[:oid,:int], t76:bat[:oid,:int]) {G}
    t78 := batcalc.*(8,t77);            # 56 t78:bat[:oid,:int] := CMDbatMULsignal(_76:int, t77:bat[:oid,:int]) {G}
    t79 := batcalc.+(t51,t78);          # 57 t79:bat[:oid,:int] := CMDbatADDsignal(t51:bat[:oid,:int], t78:bat[:oid,:int]) {G}
    t80 := batcalc.oid(t79);            # 58 t80:bat[:oid,:oid] := CMDconvertsignal_oid(t79:bat[:oid,:int]) {G}
    t81 := array.grid(1,1056000,1,0);   # 59 t81:bat[:oid,:int] := ARRAYgrid_int(_93:int, _94:int, _93:int, _95:int) {G}
#t87 := array.grid(100,1320,8,0); will save 30% by reuse 
    t87 := array.grid(t81,100,1320,8,0);# 61 t87:bat[:oid,:int] := ARRAYgridBAT_int(t81:bat[:oid,:int], _103:int, _104:int, _76:int, _95:int) {G}
    t89 := batcalc.*(1320,t3);          # 62 t89:bat[:oid,:int] := CMDbatMULsignal(_104:int, t3:bat[:oid,:int]) {G}
    t90 := batcalc.+(t87,t89);          # 63 t90:bat[:oid,:int] := CMDbatADDsignal(t87:bat[:oid,:int], t89:bat[:oid,:int]) {G}
    t91 := batcalc.oid(t90);            # 64 t91:bat[:oid,:oid] := CMDconvertsignal_oid(t90:bat[:oid,:int]) {G}
    t92 := array.grid(1,132000,1,0);    # 65 t92:bat[:oid,:int] := ARRAYgrid_int(_93:int, _109:int, _93:int, _95:int) {G}
    t95 := array.grid(1,100,1320,0);    # 66 t95:bat[:oid,:int] := ARRAYgrid_int(_93:int, _103:int, _104:int, _95:int) {G}
    t96 := batcalc.oid(t95);            # 67 t96:bat[:oid,:oid] := CMDconvertsignal_oid(t95:bat[:oid,:int]) {G}
    t97 := array.grid(1,100,1,0);       # 68 t97:bat[:oid,:int] := ARRAYgrid_int(_93:int, _103:int, _93:int, _95:int) {G}
barrier always := true;                 # 69 always:bit := _118:bit {J87}
    t42:bat[:oid,:dbl]  := bbp.bind(s); # 70 t42:bat[:oid,:dbl] := CMDbbpbind(s:str) {G}
    t48 := algebra.join(t47,t42);       # 71 t48:bat[:oid,:dbl] := ALGjoin(t47:bat[:oid,:oid], t42:bat[:oid,:dbl]) {G}
    t59 := batcalc.-(t48,t58);          # 72 t59:bat[:oid,:dbl] := CMDbatSUBsignal(t48:bat[:oid,:dbl], t58:bat[:oid,:dbl]) {G}
    t61 := batcalc.*(t59,t59);          # 73 t61:bat[:oid,:dbl] := CMDbatMULsignal(t59:bat[:oid,:dbl], t59:bat[:oid,:dbl]) {G}
    t72 := batcalc./(t61,t71);          # 74 t72:bat[:oid,:dbl] := CMDbatDIVsignal(t61:bat[:oid,:dbl], t71:bat[:oid,:dbl]) {G}
    t82 := aggr.sum(t72,t80,t81);       # 75 t82:bat[:oid,:dbl] := AGGRsum3_dbl(t72:bat[:oid,:dbl], t80:bat[:oid,:oid], t81:bat[:oid,:int]) {G}
    t83 := batcalc.*(t41,t82);          # 76 t83:bat[:oid,:dbl] := CMDbatMULsignal(t41:dbl, t82:bat[:oid,:dbl]) {G}
    t84 := batmmath.exp(t83);           # 77 t84:bat[:oid,:dbl] := CMDscience_bat_dbl_exp(t83:bat[:oid,:dbl]) {G}
    t85 := batcalc.*(t40,t84);          # 78 t85:bat[:oid,:dbl] := CMDbatMULsignal(t40:bat[:oid,:dbl], t84:bat[:oid,:dbl]) {G}
    t86 := batcalc.*(t7,t85);           # 79 t86:bat[:oid,:dbl] := CMDbatMULsignal(t7:bat[:oid,:dbl], t85:bat[:oid,:dbl]) {G}
    t93 := aggr.sum(t86,t91,t92);       # 80 t93:bat[:oid,:dbl] := AGGRsum3_dbl(t86:bat[:oid,:dbl], t91:bat[:oid,:oid], t92:bat[:oid,:int]) {G}
    t94 := batmmath.log(t93);           # 81 t94:bat[:oid,:dbl] := CMDscience_bat_dbl_log(t93:bat[:oid,:dbl]) {G}
    t98 := aggr.sum(t94,t96,t97);       # 82 t98:bat[:oid,:dbl] := AGGRsum3_dbl(t94:bat[:oid,:dbl], t96:bat[:oid,:oid], t97:bat[:oid,:int]) {G}
    top := t98;                         # 83 top:bat[:oid,:dbl] := t98:bat[:oid,:dbl] {G}
    io.table(t97,top);                  # 84 _117:void := IOttable(t97:bat[:oid,:int], top:bat[:oid,:dbl]) {G}
    yield f1;                           # 85 f1:void 
    redo always;                        # 86 always:bit {J70}
exit always;                            # 87 always:bit 
end f1;                                 # 88  

# 23:39:03 >  
# 23:39:03 >  Done.
# 23:39:03 >  

