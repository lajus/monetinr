stdout of test 'inline09` in directory 'monetdb5/optimizer` itself:


# 11:53:00 >  
# 11:53:00 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=36453 --set xrpc_port=42260 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline09.mal
# 11:53:00 >  

# MonetDB server v5.3.0, based on kernel v1.21.0
# Serving database 'mTests_src_optimizer'
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2007 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.foo{inline}(a:str):str;
    a := str.replace(a,"A","");
    a := str.replace(a,"E","");
    a := str.replace(a,"I","");
    a := str.replace(a,"O","");
    a := str.replace(a,"U","");
    a := str.replace(a," ","");
    return foo := a;
end foo;
function user.bar{inline}(a:str,b:str):str;
    sa := user.foo(a);
    sa := str.substring(sa,1,5);
    sb := user.foo(b);
    sb := str.substring(sb,1,3);
    c := calc.+(sa,sb);
    return bar := c;
end bar;
function user.qry():void;
    b := bat.new(:oid,:str);
    bat.insert(b,0@0,"2");
    z:bat[:oid,:str]  := mal.multiplex("user","bar",b,b);
end qry;
function user.main():void;
# remapping inline functions 
    mdb.List("user","qry");
end main;
function user.qry():void;               #  0 qry:void := user.qry() {G}
    b := bat.new(:oid,:str);            #  1 b:bat[:oid,:str] := CMDBATnew(_2:oid, _3:str) {G}
    bat.insert(b,0@0,"2");              #  2 _4:bat[:oid,:str] := BKCinsert_bun(b:bat[:oid,:str], _5:oid, _6:str) {G}
    b := batstr.replace(b,"A","");      #  3 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _21:str, _22:str) {G}
    b := batstr.replace(b,"E","");      #  4 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _23:str, _22:str) {G}
    b := batstr.replace(b,"I","");      #  5 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _24:str, _22:str) {G}
    b := batstr.replace(b,"O","");      #  6 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _25:str, _22:str) {G}
    b := batstr.replace(b,"U","");      #  7 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _26:str, _22:str) {G}
    b := batstr.replace(b," ","");      #  8 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _27:str, _22:str) {G}
    X_13 := b;                          #  9 _13:bat[:oid,:str] := b:bat[:oid,:str] {G}
    X_13 := batstr.substring(X_13,1,5); # 10 _13:bat[:oid,:str] := STRbatsubstringcst(_13:bat[:oid,:str], _14:int, _15:int) {G}
    b := batstr.replace(b,"A","");      # 11 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _21:str, _22:str) {G}
    b := batstr.replace(b,"E","");      # 12 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _23:str, _22:str) {G}
    b := batstr.replace(b,"I","");      # 13 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _24:str, _22:str) {G}
    b := batstr.replace(b,"O","");      # 14 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _25:str, _22:str) {G}
    b := batstr.replace(b,"U","");      # 15 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _26:str, _22:str) {G}
    b := batstr.replace(b," ","");      # 16 b:bat[:oid,:str] := STRbatreplace(b:bat[:oid,:str], _27:str, _22:str) {G}
    X_16 := b;                          # 17 _16:bat[:oid,:str] := b:bat[:oid,:str] {G}
    X_16 := batstr.substring(X_16,1,3); # 18 _16:bat[:oid,:str] := STRbatsubstringcst(_16:bat[:oid,:str], _14:int, _17:int) {G}
    X_18 := batcalc.+(X_13,X_16);       # 19 _18:bat[:oid,:str] := STRbatConcat(_13:bat[:oid,:str], _16:bat[:oid,:str]) {G}
    z:bat[:oid,:str] {inline} := X_18;  # 20 z:bat[:oid,:str] := _18:bat[:oid,:str] {G}
end qry;                                # 21  

# 11:53:00 >  
# 11:53:00 >  Done.
# 11:53:00 >  

