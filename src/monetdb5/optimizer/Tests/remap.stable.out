stdout of test 'remap` in directory 'monetdb5/optimizer` itself:


# 22:31:17 >  
# 22:31:17 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=34030 --set xrpc_port=44388 --set monet_prompt= --trace --dbname=mTests_src_optimizer  remap.mal < /dev/null
# 22:31:17 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:38900/
function user.tst():void;
    b := bat.new(:oid,:int);
# a correct call 
    z:bat[:oid,:int]  := mal.multiplex("calc","+",b,1);
    f:bat[:oid,:bit]  := mal.multiplex("calc","<",b,3);
    f:bat[:oid,:bit]  := mal.multiplex("calc","<",3,b);
    d := bat.new(:oid,:str);
    a:bat[:oid,:bit]  := mal.multiplex("calc","isnil",d);
# demonstrate an error 
    y:bat[:int,:int]  := mal.multiplex("calc","+",b,1);
end tst;
function user.main():void;
# it will be ignored by the optimizer 
    mdb.List("user","tst");
end main;
function user.tst():void;               #  0 tst:void := user.tst() {G}
    b := bat.new(:oid,:int);            #  1 b:bat[:oid,:int] := CMDBATnew(_2:oid, _3:int) {G}
# a correct call 
    z:bat[:oid,:int]  := batcalc.+(b,1);#  3 z:bat[:oid,:int] := CMDbatADDsignal(b:bat[:oid,:int], _8:int) {G}
    f:bat[:oid,:bit]  := batcalc.<(b,3);#  4 f:bat[:oid,:bit] := CMDbatLT(b:bat[:oid,:int], _11:int) {G}
    f:bat[:oid,:bit]  := batcalc.<(3,b);#  5 f:bat[:oid,:bit] := CMDbatLT(_11:int, b:bat[:oid,:int]) {G}
    d := bat.new(:oid,:str);            #  6 d:bat[:oid,:str] := CMDBATnew(_2:oid, _13:str) {G}
    a:bat[:oid,:bit]  := batcalc.isnil(d);#  7 a:bat[:oid,:bit] := CMDbatISNIL(d:bat[:oid,:str]) {G}
# demonstrate an error 
    y:bat[:int,:int]  := mal.multiplex("calc","+",b,1);#  9 y:bat[:int,:int] := OPTremapMultiplex(_6:str, _7:str, b:bat[:oid,:int], _8:int) {G}
end tst;                                # 10  

# 22:31:17 >  
# 22:31:17 >  Done.
# 22:31:17 >  

