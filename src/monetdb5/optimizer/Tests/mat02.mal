
# select count(name) from tables
mdb.List();

# simulate the SQL behavior
    v2v0:= bat.new(:oid,:int);
    bat.insert(v2v0,0@0,0);
    v2v1:= bat.new(:oid,:int);
    bat.insert(v2v1,1@0,1);
    v2v2:= bat.new(:oid,:int);
    bat.insert(v2v2,nil,2);
    v2 := mat.new(v2v0,v2v1,v2v2);
io.print(v2v2);
	v60a := bat.new(:oid,:str);
	bat.insert(v60a,0@0,"first");
	v60b := bat.new(:oid,:str);
	bat.insert(v60b,1@0,"second");
	v60:= mat.new(v60a,v60b);

    v23:= bat.new(:oid,:int);
	v68:= bat.new(:oid,:str);

    v8:= bat.new(:oid,:oid);
    v10 := bat.reverse(v8);
    v12 := algebra.kdifference(v2,v10);
    v17 := algebra.markT(v12,0@0);
    v19 := bat.reverse(v17);
    v21 := algebra.join(v19,v2);
    v26:= bat.new(:oid,:oid);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    v40 := bat.setAccess(v21,"w");
    bat.append(v40,v38);
    v47 := algebra.markT(v40,0@0);
    v49 := bat.reverse(v47);
    v51 := algebra.join(v49,v40);
    v56 := algebra.markT(v51,0@0);
    v58 := bat.reverse(v56);
    v66 := algebra.join(v19,v60);
    v71 := algebra.join(v36,v68);
    v73 := bat.setAccess(v66,"w");
    bat.append(v73,v71);
    v77 := algebra.join(v49,v73);
    v79 := algebra.join(v58,v77);
#   v81 := sql.resultSet(1,3,v79);
#   sql.rsColumn(v81,"tables","name","varchar",1024,0,v79);
    io.print(v79);

optimizer.multitable();

