stdout of test 'tst4610` in directory 'monetdb5/optimizer` itself:


# 19:36:05 >  
# 19:36:05 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31892 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4610.mal < /dev/null
# 19:36:05 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.joinPath(a:bat[:any_1,:any_2],b:bat[:any_2,:any_3],c:bat[:any_3,:any_4]):bat[:any_1,:any_4];
    z := algebra.join(a,b);
    zz := algebra.join(z,c);
    return joinPath := zz;
end joinPath;
function user.main():void;
# the first test for macro expansions and inversions 
    a := bat.new(:oid,:int);
    b := bat.new(:oid,:int);
    br := bat.reverse(b);
    c := bat.new(:oid,:int);
    h := user.joinPath(a,br,c);
    ao := batcalc.oid(a);
    bo := batcalc.oid(b);
    bor := bat.reverse(bo);
    r := algebra.joinPath(ao,bor,c);
    mdb.List();
function user.main():void;              #  0 main:void := user.main() {G}
# the first test for macro expansions and inversions 
    a := bat.new(:oid,:int);            #  2 a:bat[:oid,:int] := CMDBATnew(_6:oid, _7:int) {G}
    b := bat.new(:oid,:int);            #  3 b:bat[:oid,:int] := CMDBATnew(_6:oid, _7:int) {G}
    br := bat.reverse(b);               #  4 br:bat[:int,:oid] := BKCreverse(b:bat[:oid,:int]) {G}
    c := bat.new(:oid,:int);            #  5 c:bat[:oid,:int] := CMDBATnew(_6:oid, _7:int) {G}
    h := user.joinPath(a,br,c);         #  6 h:bat[:oid,:int] := user.joinPath(a:bat[:oid,:int], br:bat[:int,:oid], c:bat[:oid,:int]) {PG}
    ao := batcalc.oid(a);               #  7 ao:bat[:oid,:oid] := CMDconvertsignal_oid(a:bat[:oid,:int]) {G}
    bo := batcalc.oid(b);               #  8 bo:bat[:oid,:oid] := CMDconvertsignal_oid(b:bat[:oid,:int]) {G}
    bor := bat.reverse(bo);             #  9 bor:bat[:oid,:oid] := BKCreverse(bo:bat[:oid,:oid]) {G}
    r := algebra.joinPath(ao,bor,c);    # 10 r:bat[:oid,:any] := ALGjoinPath(ao:bat[:oid,:oid], bor:bat[:oid,:oid], c:bat[:oid,:int]) {G}
    mdb.List();                         # 11 _17:void := MDBlistDetail() 

# 19:36:05 >  
# 19:36:05 >  Done.
# 19:36:05 >  

