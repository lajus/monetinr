time:=alarm.usec();
function f1():void;
	t1 := array.grid(500,500,1,0);
	top := t1;
	bat.setName(top,"A_bat");
	bat.setPersistent(top);
	transaction.commit();
end f1;
	optimizer.accumulators("user","f1");
	optimizer.garbageCollector("user","f1");
	#f1();

function f2():void;
	t1:bat[:void,:int] := bbp.bind("A_bat");
	t2 := array.grid(1,500,500,0);
	t3 := array.grid(500,500,1,0);
	t4 := batcalc.*(500,t3);
	t5 := batcalc.+(t2,t4);
	t6 := batcalc.oid(t5);
	t7 := algebra.join(t6,t1);
	top := t7;
	bat.setName(top,"B_bat");
	bat.setPersistent(top);
	transaction.commit();
end f2;
	optimizer.accumulators("user","f2");
	optimizer.garbageCollector("user","f2");
	#f2();

function f3():void;
	i1 := 0;
	t2:bat[:void,:int] := bbp.bind("B_bat");
	t3 := array.grid(1,500,1,0);
	t5 := calc.int(i1);
	t6 := batcalc.init(t3,t5);
	t7 := batcalc.*(500,t6);
	t8 := batcalc.+(t3,t7);
	t9 := batcalc.oid(t8);
	t10 := algebra.join(t9,t2);
	t11 := array.grid(500,500,1,0);
	t12 := batcalc.oid(t11);
	t13 := algebra.join(t12,t10);
	t14:bat[:void,:int] := bbp.bind("A_bat");
	t19 := batcalc.*(500,t3);
	t20 := batcalc.+(t6,t19);
	t21 := batcalc.oid(t20);
	t22 := algebra.join(t21,t14);
	t23 := array.grid(1,500,500,0);
	t24 := batcalc.oid(t23);
	t25 := algebra.join(t24,t22);
	t26 := batcalc.*(t13,t25);
	a_i1 := t26;
barrier (go,i1) := mal.newRange(1:int);
	t27:bat[:void,:int] := bbp.bind("B_bat");
	t28 := array.grid(1,500,1,0);
	t30 := calc.int(i1);
	t31 := batcalc.init(t28,t30);
	t32 := batcalc.*(500,t31);
	t33 := batcalc.+(t28,t32);
	t34 := batcalc.oid(t33);
	t35 := algebra.join(t34,t27);
	t36 := array.grid(500,500,1,0);
	t37 := batcalc.oid(t36);
	t38 := algebra.join(t37,t35);
	t39:bat[:void,:int] := bbp.bind("A_bat");
	t44 := batcalc.*(500,t28);
	t45 := batcalc.+(t31,t44);
	t46 := batcalc.oid(t45);
	t47 := algebra.join(t46,t39);
	t48 := array.grid(1,500,500,0);
	t49 := batcalc.oid(t48);
	t50 := algebra.join(t49,t47);
	t51 := batcalc.*(t38,t50);
	a_i1 := batcalc.+(a_i1,t51);
	#redo (go,i1) := mal.nextElement(1:int,500:int);
	redo (go,i1) := mal.nextElement(1:int,3:int);
exit (go,i1);
	t52 := a_i1;
	top := t52;
	bat.setName(top,"SIM_bat");
	bat.setPersistent(top);
	transaction.commit();
end f3;
	optimizer.accumulators("user","f3");
	optimizer.commonTerms("user","f3");
	optimizer.strengthReduction("user","f3");
	optimizer.garbageCollector("user","f3");
	mdb.List("user","f3");
	#f3();

function f4():void;
	SIM_bat := bbp.bind("SIM_bat");
	bat.setPersistent(SIM_bat,false);
	transaction.commit();
end f4;
	optimizer.accumulators("user","f4");
	optimizer.garbageCollector("user","f4");
#	f4();

function f5():void;
	B_bat := bbp.bind("B_bat");
	bat.setPersistent(B_bat,false);
	transaction.commit();
end f5;
	optimizer.expressionAccumulation("user","f5");
	optimizer.garbageCollector("user","f5");
	#f5();

function f6():void;
	A_bat := bbp.bind("A_bat");
	bat.setPersistent(A_bat,false);
	transaction.commit();
end f6;
	optimizer.expressionAccumulation("user","f6");
	optimizer.garbageCollector("user","f6");
#	f6();

#f1();f2();f3();
time2:=alarm.usec();

diff := time2 - time;
secs := diff / 1000000;
decs := diff % 1000000;
io.printf("#TIME %d.",secs);
io.printf("%06d sec\n", decs);
#quit();
