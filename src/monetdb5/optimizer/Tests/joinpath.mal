function tst0();
	a:= bat.new(:oid,:oid);
	b:= bat.new(:oid,:oid);
	c:= bat.new(:oid,:oid);
	j1:= algebra.leftfetchjoin(a,b);
	j2:= algebra.leftfetchjoin(c,j1);
	io.print(j2);
end tst0;
function tst1();
	a:= bat.new(:oid,:oid);
	b:= bat.new(:oid,:oid);
	c:= bat.new(:oid,:oid);
	j3:= algebra.leftfetchjoin(a,c);
	j4:= algebra.leftfetchjoin(b,j3);
	io.print(j4);
end tst1;
# The JAQL test case
function tst2();
	a:= bat.new(:oid,:str);
	bat.append(a,"world");
	bat.append(a,"hello");
	br:= bat.new(:oid,:str);
	bat.append(br,"hello");
	b:= bat.reverse(br);
	c:= bat.new(:oid,:oid);
	bat.append(c,0@0);
	io.print(a);
	io.print(br);
	io.print(c);
	j1:= algebra.join(a,b);
	j2:= algebra.join(j1,c);
	io.print(j2);
end tst2;

optimizer.joinPath("user","tst0");
optimizer.deadcode("user","tst0");
mdb.list("user","tst0");
optimizer.joinPath("user","tst1");
optimizer.deadcode("user","tst1");
mdb.list("user","tst1");
optimizer.joinPath("user","tst2");
optimizer.deadcode("user","tst2");
mdb.list("user","tst2");
tst2();
