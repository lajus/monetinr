function sql_cache.s7_0():void;
    _1:bat[:oid,:int]{not_nil=true,rows=3,bid=709}  := sql.bind("sys","r","k",0);
    _6:bat[:oid,:int]{not_nil=true,rows=0,bid=684}  := sql.bind("sys","r","k",1);
    constraints.emptySet(_6);
    _8:bat[:oid,:int]{not_nil=true,rows=0,bid=690}  := sql.bind("sys","r","k",2);
    constraints.emptySet(_8);
    _10:bat[:oid,:int]{not_nil=true,rows=3,bid=708}  := sql.bind("sys","r","a",0);
    _18:bat[:oid,:int]{not_nil=true,rows=3,bid=688}  := sql.bind("sys","s","k",0);
    _20:bat[:oid,:int]{not_nil=true,rows=0,bid=697}  := sql.bind("sys","s","k",1);
    constraints.emptySet(_20);
    _21:bat[:oid,:int]{not_nil=true,rows=0,bid=702}  := sql.bind("sys","s","k",2);
    constraints.emptySet(_21);
    _22:bat[:oid,:int]{not_nil=true,rows=3,bid=691}  := sql.bind("sys","s","b",0);
    _13 := calc.int(2);
    _14{rows=3} := algebra.uselect(_10,nil:int,_13,false,false);
    _17{rows=3} := algebra.semijoin(_1,_14);
    _25 := calc.int(3);
    _26{rows=3} := algebra.uselect(_22,_25,nil:int);
    _27{rows=3} := algebra.semijoin(_18,_26);
    _28{rows=3} := bat.reverse(_27);
    _29{rows=3} := algebra.join(_17,_28);
    _31{rows=3} := algebra.markT(_29,0@0);
    _32{rows=3} := bat.reverse(_31);
    _33{rows=3} := algebra.join(_32,_10);
    _34{rows=3} := bat.reverse(_29);
    _35{rows=3} := algebra.markT(_34,0@0);
    _36{rows=3} := bat.reverse(_35);
    _37{rows=3} := algebra.join(_36,_22);
    _38 := sql.resultSet(2,1,_33);
    sql.rsColumn(_38,"sys.r","a","int",32,0,_33);
    sql.rsColumn(_38,"sys.s","b","int",32,0,_37);
    sql.exportResult(_38,"");
end s7_0;

function sql_cache.s2_0(A0:sht,A1:sht):void;    # 0  (s2_0:void)<-(A0:sht)(A1:sht)
    _3:bat[:oid,:int]{not_nil=true,rows=3,bid=709}  := sql.bind("sys","r","k",0);       # 1 mvc_bind_wrap (_3:bat[:oid,:int])<-(_4:str)(_5:str)(_6:str)(_7:int)
    _8:bat[:oid,:int]{not_nil=true,rows=0,bid=641}  := sql.bind("sys","r","k",1);       # 2 mvc_bind_wrap (_8:bat[:oid,:int])<-(_4:str)(_5:str)(_6:str)(_9:int)
    constraints.emptySet(_8);   # 3 CemptySet (_47:void)<-(_8:bat[:oid,:int])
    _10:bat[:oid,:int]{not_nil=true,rows=0,bid=642}  := sql.bind("sys","r","k",2);      # 4 mvc_bind_wrap (_10:bat[:oid,:int])<-(_4:str)(_5:str)(_6:str)(_11:int)
    constraints.emptySet(_10);  # 5 CemptySet (_48:void)<-(_10:bat[:oid,:int])
    _12:bat[:oid,:int]{not_nil=true,rows=3,bid=708}  := sql.bind("sys","r","a",0);      # 6 mvc_bind_wrap (_12:bat[:oid,:int])<-(_4:str)(_5:str)(_13:str)(_7:int)
    _19:bat[:oid,:int]{not_nil=true,rows=3,bid=688}  := sql.bind("sys","s","k",0);      # 7 mvc_bind_wrap (_19:bat[:oid,:int])<-(_4:str)(_20:str)(_6:str)(_7:int)
    _21:bat[:oid,:int]{not_nil=true,rows=0,bid=646}  := sql.bind("sys","s","k",1);      # 8 mvc_bind_wrap (_21:bat[:oid,:int])<-(_4:str)(_20:str)(_6:str)(_9:int)
    constraints.emptySet(_21);  # 9 CemptySet (_49:void)<-(_21:bat[:oid,:int])
    _22:bat[:oid,:int]{not_nil=true,rows=0,bid=647}  := sql.bind("sys","s","k",2);      # 10 mvc_bind_wrap (_22:bat[:oid,:int])<-(_4:str)(_20:str)(_6:str)(_11:int)
    constraints.emptySet(_22);  # 11 CemptySet (_50:void)<-(_22:bat[:oid,:int])
    _23:bat[:oid,:int]{not_nil=true,rows=3,bid=691}  := sql.bind("sys","s","b",0);      # 12 mvc_bind_wrap (_23:bat[:oid,:int])<-(_4:str)(_20:str)(_24:str)(_7:int)
    _14 := calc.int(A0);        # 13 sht_2_int (_14:int)<-(A0:sht)
    _15{rows=3} := algebra.uselect(_12,nil:int,_14,false,false);        # 14 ALGuselectInclusive (_15:bat[:oid,:oid])<-(_12:bat[:oid,:int])(_16:int)(_14:int)(_17:bit)(_17:bit)
    _18{rows=3} := algebra.semijoin(_3,_15);    # 15 ALGsemijoin (_18:bat[:oid,:int])<-(_3:bat[:oid,:int])(_15:bat[:oid,:oid])
    _25 := calc.int(A1);        # 16 sht_2_int (_25:int)<-(A1:sht)
    _26{rows=3} := algebra.uselect(_23,_25,nil:int);    # 17 ALGuselect (_26:bat[:oid,:oid])<-(_23:bat[:oid,:int])(_25:int)(_16:int)
    _27{rows=3} := algebra.semijoin(_19,_26);   # 18 ALGsemijoin (_27:bat[:oid,:int])<-(_19:bat[:oid,:int])(_26:bat[:oid,:oid])
    _28{rows=3} := bat.reverse(_27);    # 19 BKCreverse (_28:bat[:int,:oid])<-(_27:bat[:oid,:int])
    _29{rows=3} := algebra.join(_18,_28);       # 20 ALGjoin (_29:bat[:oid,:oid])<-(_18:bat[:oid,:int])(_28:bat[:int,:oid])
    _31{rows=3} := algebra.markT(_29,0@0);      # 21 ALGtmark (_31:bat[:oid,:oid])<-(_29:bat[:oid,:oid])(_30:oid)
    _32{rows=3} := bat.reverse(_31);    # 22 BKCreverse (_32:bat[:oid,:oid])<-(_31:bat[:oid,:oid])
    _33{rows=3} := algebra.join(_32,_12);       # 23 ALGjoin (_33:bat[:oid,:int])<-(_32:bat[:oid,:oid])(_12:bat[:oid,:int])
    _34{rows=3} := bat.reverse(_29);    # 24 BKCreverse (_34:bat[:oid,:oid])<-(_29:bat[:oid,:oid])
    _35{rows=3} := algebra.markT(_34,0@0);      # 25 ALGtmark (_35:bat[:oid,:oid])<-(_34:bat[:oid,:oid])(_30:oid)
    _36{rows=3} := bat.reverse(_35);    # 26 BKCreverse (_36:bat[:oid,:oid])<-(_35:bat[:oid,:oid])
    _37{rows=3} := algebra.join(_36,_23);       # 27 ALGjoin (_37:bat[:oid,:int])<-(_36:bat[:oid,:oid])(_23:bat[:oid,:int])
    _38 := sql.resultSet(2,1,_33);      # 28 mvc_result_table_wrap (_38:int)<-(_11:int)(_9:int)(_33:bat[:oid,:int])
    sql.rsColumn(_38,"sys.r","a","int",32,0,_33);       # 29 mvc_result_column_wrap (_39:void)<-(_38:int)(_40:str)(_13:str)(_41:str)(_42:int)(_7:int)(_33:bat[:oid,:int])
    sql.rsColumn(_38,"sys.s","b","int",32,0,_37);       # 30 mvc_result_column_wrap (_43:void)<-(_38:int)(_44:str)(_24:str)(_41:str)(_42:int)(_7:int)(_37:bat[:oid,:int])
    sql.exportResult(_38,"");   # 31 mvc_export_result_wrap (_45:void)<-(_38:int)(_46:str)
end s2_0;       # 32

