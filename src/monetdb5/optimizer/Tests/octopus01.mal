include sql;

function octopus.leg0(version:int):bat[:oid,:int];
    conn:= remote.connect("demo","monetdb","monetdb");
    X54:bat[:oid,:int] := octopus.bind(conn,"sys","squida","bid",0,version,2,0);
    X64:bat[:oid,:int] := octopus.bind(conn,"sys","squida","bid",2,version,2,0);
    X72 := algebra.kdifference(X54,X64);
    X78 := algebra.kunion(X72,X64);
    X13:bat[:oid,:oid]  := octopus.bind_dbat(conn,"sys","squida",1,version,2,1);
    X14 := bat.reverse(X13);
    X85 := algebra.kdifference(X78,X14);
    return leg0:= X85;
end octopus.leg0;
function octopus.leg1( version:int):bat[:oid,:int];
    conn:= remote.connect("demo","monetdb","monetdb");
    X56:bat[:oid,:int] := octopus.bind(conn,"sys","squida","bid",0,version,2,1);
    X65:bat[:oid,:int] := octopus.bind(conn,"sys","squida","bid",2,version,2,1);
    X72 := algebra.kdifference(X56,X65);
    X78 := algebra.kunion(X72,X65);
    X13:bat[:oid,:oid]  := octopus.bind_dbat(conn,"sys","squida",1,version,2,1);
    X14 := bat.reverse(X13);
    X85 := algebra.kdifference(X78,X14);
    return leg1:= X85;
end octopus.leg1;
function octopus.stretch_qry(srv:str,fcn:str, ver:int):bat[:oid,:int];
    conn:= remote.connect(srv,"monetdb","monetdb");
    v:= remote.put(conn,ver);
    r:= remote.exec(conn,"octopus",fcn,v);
    b:bat[:oid,:int]:= remote.get(conn,r);
    return b;
end stretch_qry;

function user.qry():void;
barrier (_100,version:int):= scheduler.octopus(10);
    X87 := octopus.stretch_qry("demo","leg0",version);
    X88 := octopus.stretch_qry("demo","leg1",version);
exit (X100,version);
    X15 := mat.pack(X87,X88);
    X16 := sql.resultSet(1,1,X15);
    sql.rsColumn(X16,"sys.squida","bid","int",32,0,X15);
    X21 := io.stdout();
    sql.exportResult(X21,X16);
end qry;
