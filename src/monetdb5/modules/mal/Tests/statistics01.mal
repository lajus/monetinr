#test the statistics module
tz:bat[:str,:timezone]:= bbp.bind("timezones");
statistics.prelude();
#statistics.dump();		is size dependent
statistics.deposit("timezones");
#statistics.dump();		is size dependent
b:= statistics.getHotset();
#io.print(b);
l:= statistics.getCount("timezones");
io.print(l);
catch MALException:str;
	io.print("could not get count from timezones");
exit MALException;
m:= statistics.getMin("timezones");
catch MALException:str;
	io.print("could not get minimum from timezones");
exit MALException;
io.print(m);
m:= statistics.getMax("timezones");
catch MALException:str;
	io.print("could not get maximum from timezones");
exit MALException;
io.print(m);
h:= statistics.getHistogram("timezones");
catch MALException:str;
	io.print("could not get histogram from timezones");
	io.print(MALException);
	h:= bat.new(:oid,:int);
exit MALException;
io.print("histogram");
io.print(h);
hc:= aggr.count(h);
io.print(hc);
statistics.discard("timezones");
statistics.epilogue();
#d:= bbp.getRefCount();
#dl:=bbp.getLRefCount();
#dn:= bbp.getNames();
#ds:= algebra.sort(dn);
#io.table(dn,d,dl);

