stdout of test 'cluster00` in directory 'monetdb5/modules/mal` itself:


# 14:20:04 >  
# 14:20:04 >   mserver5 "--config=/ufs/mk/monet5//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=39938 --set xrpc_port=49692 --set monet_prompt= --trace  --dbname=mTests_src_modules_mal  cluster00.mal
# 14:20:04 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_modules_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:37931/
function user.main():void;
#test clustering a small table 
    b := bat.new(:oid,:int);
    c := bat.new(:oid,:int);
    d := bat.new(:oid,:int);
barrier i := 0:int;
    j := calc.%(i,5);
    bat.append(b,j);
    j := calc.%(i,3);
    bat.append(c,j);
    j := calc.%(i,2);
    bat.append(d,j);
    redo i := iterator.next(1:int,10:int);
exit i;
#bat.append(b,b); 
    io.print(b,c,d);
    keys := cluster.key(b);
    io.print(keys);
    map := cluster.map(keys);
    io.print(map);
    b1 := cluster.column(map,b);
    c1 := cluster.column(map,c);
    d1 := cluster.column(map,d);
    io.print(b1,c1,d1);
# reshuffle 
    map := cluster.table(c,d,b);
    io.print(c,d,b);
    io.print(map);
end main;
#---------------------------------#
# h	t	t	t	  # name
# void	int	int	int	  # type
#---------------------------------#
[ 0@0,	  0,	  0,	  0	  ]
[ 1@0,	  1,	  1,	  1	  ]
[ 2@0,	  2,	  2,	  0	  ]
[ 3@0,	  3,	  0,	  1	  ]
[ 4@0,	  4,	  1,	  0	  ]
[ 5@0,	  0,	  2,	  1	  ]
[ 6@0,	  1,	  0,	  0	  ]
[ 7@0,	  2,	  1,	  1	  ]
[ 8@0,	  3,	  2,	  0	  ]
[ 9@0,	  4,	  0,	  1	  ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  4@0	  ]
[ 5@0,	  0@0	  ]
[ 6@0,	  1@0	  ]
[ 7@0,	  2@0	  ]
[ 8@0,	  3@0	  ]
[ 9@0,	  4@0	  ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  4@0	  ]
[ 5@0,	  5@0	  ]
[ 6@0,	  6@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  8@0	  ]
[ 9@0,	  9@0	  ]
#---------------------------------#
# h	t	t	t	  # name
# void	int	int	int	  # type
#---------------------------------#
[ 0@0,	  0,	  0,	  0	  ]
[ 1@0,	  1,	  1,	  1	  ]
[ 2@0,	  2,	  2,	  0	  ]
[ 3@0,	  3,	  0,	  1	  ]
[ 4@0,	  4,	  1,	  0	  ]
[ 5@0,	  0,	  2,	  1	  ]
[ 6@0,	  1,	  0,	  0	  ]
[ 7@0,	  2,	  1,	  1	  ]
[ 8@0,	  3,	  2,	  0	  ]
[ 9@0,	  4,	  0,	  1	  ]
#---------------------------------#
# h	t	t	t	  # name
# void	int	int	int	  # type
#---------------------------------#
[ 0@0,	  0,	  0,	  0	  ]
[ 1@0,	  1,	  1,	  1	  ]
[ 2@0,	  2,	  0,	  2	  ]
[ 3@0,	  0,	  1,	  3	  ]
[ 4@0,	  1,	  0,	  4	  ]
[ 5@0,	  2,	  1,	  0	  ]
[ 6@0,	  0,	  0,	  1	  ]
[ 7@0,	  1,	  1,	  2	  ]
[ 8@0,	  2,	  0,	  3	  ]
[ 9@0,	  0,	  1,	  4	  ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  4@0	  ]
[ 5@0,	  5@0	  ]
[ 6@0,	  6@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  8@0	  ]
[ 9@0,	  9@0	  ]

# 14:20:04 >  
# 14:20:04 >  Done.
# 14:20:04 >  

