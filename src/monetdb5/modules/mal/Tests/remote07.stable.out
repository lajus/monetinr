stdout of test 'remote07` in directory 'monetdb5/modules/mal` itself:


# 10:41:05 >  
# 10:41:05 >   mserver5 "--config=/ufs/fabian/scratch/monetdb/current/program-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5/lib:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/net/volund.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-volund.ins.cwi.nl/five/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=30248 --set xrpc_port=47120 --set monet_prompt= --set mal_listing=2 --trace  --dbname=mTests_src_modules_mal  remote07.mal
# 10:41:05 >  

# MonetDB server v5.21.0, based on kernel v1.39.0
# Release current-hg
# Serving database 'mTests_src_modules_mal', using 4 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://volund.ins.cwi.nl:30248/
# MonetDB/SQL module v2.39.0 loaded
# MonetDB/GIS module v0.19.0 loaded
function user.main():void;
# let connect figure out itself how to connect to the running db 
    uri := sabaoth.getLocalConnectionURI();
    conn:str  := remote.connect(uri,"monetdb","monetdb");
    d:bat[:str,:int]  := bat.new(:str,:int);
    bat.insert(d,"bla",1);
    bat.insert(d,nil:str,2);
    bat.insert(d,"boe",nil:int);
    bat.insert(d,d);
# 6 
    bat.insert(d,d);
# 12 
    bat.insert(d,d);
# 24 
    bat.insert(d,d);
# 48 
    bat.insert(d,d);
# 96 
    bat.insert(d,d);
# 192 
    bat.insert(d,d);
# 384 
    bat.insert(d,d);
# 768 
    bat.insert(d,d);
# 1536 
    bat.insert(d,d);
# 3072 
# store the values 
    t1 := alarm.time();
    l:str  := remote.put(conn,d);
    t2 := alarm.time();
    t3 := calc.-(t2,t1);
    io.printf("# put: %d\n",t3);
# retrieve the values 
    t1 := alarm.time();
    u:bat[:str,:int]  := remote.get(conn,l);
    t2 := alarm.time();
    t3 := calc.-(t2,t1);
    io.printf("# get: %d\n",t3);
# see if it really is here 
    c := aggr.count(u);
    io.print(c);
# help testweb a bit, since currently no cleanup is done on server 
# shutdown 
    remote.disconnect(conn);
end main;
# put: 310
# get: 10
[ 3072 ]

# 10:41:05 >  
# 10:41:05 >  Done.
# 10:41:05 >  

