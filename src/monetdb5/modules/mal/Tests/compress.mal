#test some compression work
module sql;
function sql.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];
    return bat.new(:any_1,:any_2);
end bind;


t0:= alarm.usec();
b:= bat.new(:oid,:lng);

INT_MAX := 2147483647;
dbgmsk_restore := mdb.getDebug();
dbgmsk_unset := 8+8388608;
dbgmsk_keep := calc.xor(INT_MAX,dbgmsk_unset);
dbgmsk_set := calc.and(dbgmsk_restore,dbgmsk_keep);
mdb.setDebug(dbgmsk_set);

r:= mmath.srand(0);
barrier i:= 0:lng;
	k:= mmath.rand();
	l:= calc.lng(k);
	bat.insert(b,nil:oid,l);
	redo i:= iterator.next(1:lng,100000:lng);
exit i;

mdb.setDebug(dbgmsk_restore);

s:= aggr.sum(b);
#io.print(s);

bbp.compress(b,"/tmp/bx");
zz:= bbp.decompress(b,"/tmp/bx");
c:= aggr.count(zz);
io.print(c);
ss:= aggr.sum(zz);
s:= ss-s;
#io.print(ss);
io.printf("Checksum difference should be zero %f\n",s);

#bbp.truncate(b);
#bbp.expand(b);

function qry();
	b:bat[:oid,:int]:= sql.bind("sys","tab","col",0);
end qry;
optimizer.compression("user","qry");
mdb.list("user","qry");

