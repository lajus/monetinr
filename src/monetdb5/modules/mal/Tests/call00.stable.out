stdout of test 'call00` in directory 'monetdb5/modules/mal` itself:


# 23:57:54 >  
# 23:57:54 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=38791 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  call00.mal < /dev/null
# 23:57:54 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:37931/
function user.tst(i:int,s:str):bit;
    j := calc.+(i,1);
    io.print(j);
# ignore comments 
    format := "hello %s\n";
    io.printf(format,s);
    return tst := true;
end tst;
function user.main():void;
# the base experiment to execute a string 
# if we can convert a MAL function to a string 
# it can be shipped for remote execution. 
# there should be only one definition 
    d := inspect.getSignature("user","tst");
    io.print(d);
    user.tst(1,"world");
    m := inspect.getSource("user","tst");
    io.print(m);
#Call the string derived from definition 
    language.call(m);
# now we should have two definitions 
    d := inspect.getSignature("user","tst");
    io.print(d);
end main;
#-----------------------------------------#
# view		input			  # name
# void	str			  # type
#---------------------------------#
[ 0@0,	  "(i:int,s:str):bit;"	  ]
[ 2 ]
hello world
[ "function user.tst(i:int,s:str):bit;\n    j := calc.+(i,1);\n    io.print(j);\n# ignore comments \n    format := \"hello %s\\n\";\n    io.printf(format,s);\n    return tst := true;\nend tst;\n" ]
#-----------------------------------------#
# view		input			  # name
# void	str			  # type
#---------------------------------#
[ 0@0,	  "(i:int,s:str):bit;"	  ]
[ 1@0,	  "(i:int,s:str):bit;"	  ]

# 23:57:54 >  
# 23:57:54 >  Done.
# 23:57:54 >  

