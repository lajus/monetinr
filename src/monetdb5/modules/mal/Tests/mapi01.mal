# First test of the remoteQueries optimizer
# we create a remote bat and fake a bind operation.

fs:= inspect.getEnvironment("mapi_port");
port := calc.int(fs);
#io.printf("port %d\n",port);

mid:= mapi.reconnect("localhost",port,"s0_0","monetdb","monetdb","mal");
mapi.rpc(mid,"rb:= bat.new(:oid,:int); bat.setName(rb,\"rbat\");");
mapi.rpc(mid,"bat.append(rb,1);");
mapi.rpc(mid,"bat.append(rb,3);");
mapi.rpc(mid,"bat.append(rb,5);");
mapi.rpc(mid,"bat.append(rb,6);");
mapi.rpc(mid,"bat.append(rb,7);");
mapi.rpc(mid,"c:=algebra.select(rb,0,12);");
c:bat[:oid,:int]:= mapi.rpc(mid, "io.print(c);");
io.print(c);
mapi.rpc(mid,"c:=algebra.select(rb,0,4);");
c:bat[:oid,:int]:= mapi.rpc(mid, "io.print(c);");
io.print(c);

b:bat[:oid,:int]:= mapi.bind(mid,"rbat");
io.print(b);

# see if we can do some remote selections.
mapi.rpc(mid,"d:=algebra.select(b,5,10);");
low:= 5+1;
mapi.put(mid,"low",low);
mapi.rpc(mid,"e:=algebra.select(d,low,7);");
mapi.rpc(mid,"i:=aggr.count(d);");
i:lng:= mapi.rpc(mid,"io.print(i);");
io.printf(" count %d\n",i);
d:bat[:oid,:int]:= mapi.rpc(mid,"io.print(d);");
io.print(d);
mapi.disconnect(mid);
#optimizer.remoteQueries();
