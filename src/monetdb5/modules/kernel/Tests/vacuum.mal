#building blocks for SQL vacuum actions

b:= bat.new(:oid,:int);
c:= bat.new(:oid,:oid);

k:= 0;
INT_MAX := 2147483647;
dbgmsk_restore := mdb.getDebug();
dbgmsk_unset := 8+8388608;
dbgmsk_keep := calc.xor(INT_MAX,dbgmsk_unset);
dbgmsk_set := calc.and(dbgmsk_restore,dbgmsk_keep);
mdb.setDebug(dbgmsk_set);
barrier i:= 0:lng;
	k:= k +1;
	barrier t:= k <= 1000;
		o:= calc.oid(i);
		bat.append(c,o);
	exit t;
	bat.append(b,k);
	redo i:= iterator.next(1:lng,1000000:lng);
exit i;
mdb.setDebug(dbgmsk_restore);

d:= algebra.copy(b);

cnt:= aggr.count(b);
io.print(cnt);
cnt:= aggr.count(c);
io.print(cnt);
#s:= algebra.sample(c,20);
#io.print(s);

t0:= alarm.usec();
x:= bat.shrink(b,c);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#bat.shrink() %d\n",d0);
cnt:= aggr.count(x);
io.print(cnt);

t0:= alarm.usec();
y:= bat.reuse(d,c);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#bat.reuse() %d\n",d0);
cnt:= aggr.count(y);
io.print(cnt);
