stdout of test 'color` in directory 'monetdb5/modules/atoms` itself:


# 23:57:21 >  
# 23:57:21 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=37313 --set sql_port=44202 --set xquery_port=57499 --set monet_prompt= --trace --dbname=mTests_src_modules_atoms  color.mal </dev/null
# 23:57:21 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_modules_atoms', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:37931/
function user.testcolor():void;
    c := color.rgb(100,101,102);
    cs := color.str(c);
    io.print(cs);
    V38 := color.red(c);
    io.print(V38);
    V41 := color.green(c);
    io.print(V41);
    V44 := color.blue(c);
    io.print(V44);
    V47 := color.hsv(90,0.5,1);
    c := V47;
    cs := color.str(c);
    io.print(cs);
# don't print hue, saturation, and value: architectural differences can 	 
# cause differences in the output produced.  instead, use them to produce 	 
# a new color which should be the same as the original color 	 
#    print(hue(c)); 	 
#    print(saturation(c)); 	 
#    print(value(c)); 	 
    V62 := color.hue(c);
    V63 := color.saturation(c);
    V64 := color.value(c);
    V61 := color.hsv(V62,V63,V64);
    S61 := color.str(V61);
    io.print(S61);
    V66 := color.ycc(200,100,50);
    c := V66;
    cs := color.str(c);
    io.print(cs);
    V73 := color.luminance(c);
    io.print(V73);
    V76 := color.cr(c);
    io.print(V76);
    V79 := color.cb(c);
    io.print(V79);
    V82 := color.color("0x0012ABcd");
    c := V82;
    cs := color.str(c);
    io.print(cs);
    V88 := color.red(c);
    io.print(V88);
    V91 := color.green(c);
    io.print(V91);
    V94 := color.blue(c);
    io.print(V94);
    bc := bat.new(:oid,:color);
    bat.append(bc,"0x00000000":color);
    bat.append(bc,"0x0033FF44":color);
    bat.append(bc,"0x00003F44":color);
    io.print(bc);
    z := batcolor.red(bc);
    io.print(z);
end testcolor;
function user.main():void;
    user.testcolor();
end main;
[ "0x00646566" ]
[ 100 ]
[ 101 ]
[ 102 ]
[ "0x00BFFF80" ]
[ "0x00BFFF80" ]
[ "0x00A0F63D" ]
[ 199 ]
[ 101 ]
[ 51 ]
[ "0x0012ABCD" ]
[ 18 ]
[ 171 ]
[ 205 ]
#-------------------------#
# h	t		  # name
# void	color		  # type
#-------------------------#
[ 0@0,	  0x00000000	  ]
[ 1@0,	  0x0033FF44	  ]
[ 2@0,	  0x00003F44	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  51	  ]
[ 2@0,	  0	  ]


# 23:57:21 >  
# 23:57:21 >  Done.
# 23:57:21 >  

