stdout of test 'tst115` in directory 'monetdb5/mal` itself:


# 07:58:59 >  
# 07:58:59 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst115.mal </dev/null
# 07:58:59 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:33388/
command user.+(L:any_1,R:any_1):any_1 address addIntInt;
#
#function doitOnce():int;
#	z:= 12;
#	return z;
#end doitOnce;
function user.doitOnce():int;
    z := 12;
    return doitOnce := z;
end doitOnce;
#
#function doitTwice(i:int):int;
#	j:= 2;
#	k:= 11111;
#	i:= j+k;
#	return i;
#end doitTwice;
function user.doitTwice(i:int):int;
    j := 2;
    k := 11111;
    i := calc.+(j,k);
    return doitTwice := i;
end doitTwice;
#
#
#a:=1;
#b:= doitOnce();
#c:= 2;
#d:= doitTwice(3);
#c:= 3;
#d:= doitTwice("wrong");
#
!TypeException:user.main[7]:'user.doitTwice' undefined in: d:int := user.doitTwice(_9:str)
function user.main():void;
# the next step is to trace the call of a mal function call 
    a := 1;
    b := user.doitOnce();
    c := 2;
    d := user.doitTwice(3);
    c := 3;
    d := user.doitTwice("wrong");
end main;

# 07:59:00 >  
# 07:59:00 >  Done.
# 07:59:00 >  

