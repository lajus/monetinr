stdout of test 'tst2505` in directory 'monetdb5/mal` itself:


# 08:01:06 >  
# 08:01:06 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst2505.mal </dev/null
# 08:01:06 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## The prototypical factory construct
## test factory return and restart
#
#factory random(seed:int):int;
#	i:= seed;
#	i:= 125 *i;
#	i:= i % 32767;
#	yield i;
#	i:= 125 *i;
#	i:= i % 32767;
#	return i;
#end;
factory user.random(seed:int):int;
    i := seed;
    i := calc.*(125,i);
    i := calc.%(i,32767);
    yield random := i;
    i := calc.*(125,i);
    i := calc.%(i,32767);
    return random := i;
end random;
#
#r1:= random(1);
#print(r1);
#r2:= random(34);
#print(r2);
#r2:= random(2);
#print(r2);
#r2:= random(2);
#print(r2);
#
function user.main():void;
# The prototypical factory construct 
# test factory return and restart 
    r1 := user.random(1);
    io.print(r1);
    r2 := user.random(34);
    io.print(r2);
    r2 := user.random(2);
    io.print(r2);
    r2 := user.random(24);
    io.print(r2);
end main;
[ 125 ]
[ 15625 ]
[ 250 ]
[ 31250 ]

# 08:01:06 >  
# 08:01:06 >  Done.
# 08:01:06 >  

