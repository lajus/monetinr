stdout of test 'tst234` in directory 'monetdb5/mal` itself:


# 09:11:11 >  
# 09:11:11 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=37247 --set monet_prompt= --trace --dbname=mTests_src_mal  tst234.mal < /dev/null
# 09:11:11 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
## dealing with BAT references in functions
#
#function dir():void;
#	d:= bbp.getRefCount();
#	dl:=bbp.getLRefCount();
#	dn:= bbp.getNames();
#	io.print(dn,d,dl);
#end dir;
function user.dir():void;
    d := bbp.getRefCount();
    dl := bbp.getLRefCount();
    dn := bbp.getNames();
    ds := algebra.sort(dn);
    io.table(ds,d,dl);
end dir;
#
#
#function tmp1(b:bat[:any_1,:any_2]):bat[:any_1,:any_2];
#	tmp1:= algebra.copy(b);
#	io.print("inside tmp1");
#	user.dir();
#	return tmp1;
#end tmp1;
function user.tmp1(b:bat[:any_1,:any_2]):bat[:any_1,:any_2];
    tmp1 := algebra.copy(b);
    io.print("inside tmp1");
    i := bbp.getLRefCount(b);
    io.print(i);
    return tmp1 := tmp1;
end tmp1;
#
#b:= bat.new(:int,:int);
#dir();
#d:= user.tmp1(b);
#dir();
#d:= user.tmp1(d);
#dir();
#
function user.main():void;
# dealing with BAT references in functions 
    b := bat.new(:oid,:int);
    d := user.tmp1(b);
    i := bbp.getLRefCount(d);
    io.print(i);
    d := user.tmp1(d);
    i := bbp.getLRefCount(d);
    io.print(i);
end main;
[ "inside tmp1" ]
[ 2 ]
[ 1 ]
[ "inside tmp1" ]
[ 2 ]
[ 1 ]

# 09:11:11 >  
# 09:11:11 >  Done.
# 09:11:11 >  

