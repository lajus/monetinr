stdout of test 'tst906` in directory 'monetdb5/mal` itself:


# 19:09:38 >  
# 19:09:38 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=36033 --set sql_port=47929 --set xquery_port=59799 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst906.mal </dev/null
# 19:09:38 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the multiplex code blocks.
## check detection of the underlying fast implementations
#
#b:= bbp.new(:lng,:lng);
#barrier (v,i):= mal.newRange(0:lng);
#	bat.insert(b,i,i);
#	redo (v,i):= mal.nextElement(1:lng,10:lng);
#exit (v,i);
#c:= algebra.copy(b);
#io.print(c);
#x:= batcalc.+(b,c);
#io.print(x);
#x:= batcalc.+(b,1:lng);
#io.print(x);
#x:= batcalc./(b,1:lng);
#io.print(x);
#x:= batcalc.*(b,c);
#io.print(x);
#y:= batcalc.==(b,b);
#io.print(y);
#y:= batcalc.==(b,x);
#io.print(y);
#z:= batcalc.not(y);
#io.print(z);
#
#
function user.main():void;
# the multiplex code blocks. 
# check detection of the underlying fast implementations 
    b := bat.new(:oid,:lng);
barrier i := 0:lng;
    bat.append(b,i);
    redo i := iterator.next(1:lng,10:lng);
exit i;
    c := algebra.copy(b);
    io.print(c);
    x := batcalc.+(b,c);
    io.print(x);
    x := batcalc.+(b,1:lng);
    io.print(x);
    x := batcalc./(b,1:lng);
    io.print(x);
    x := batcalc.*(b,c);
    io.print(x);
    y := batcalc.==(b,b);
    io.print(y);
    y := batcalc.==(b,x);
    io.print(y);
    z := batcalc.not(y);
    io.print(z);
end main;
#-----------------#
# h	t	  # name
# lng	lng	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 4@0,	  4	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 9@0,	  9	  ]
#-----------------#
# h	t	  # name
# oid	lng	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  2	  ]
[ 2@0,	  4	  ]
[ 3@0,	  6	  ]
[ 4@0,	  8	  ]
[ 5@0,	  10	  ]
[ 6@0,	  12	  ]
[ 7@0,	  14	  ]
[ 8@0,	  16	  ]
[ 9@0,	  18	  ]
#-----------------#
# h	t	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
[ 2@0,	  3	  ]
[ 3@0,	  4	  ]
[ 4@0,	  5	  ]
[ 5@0,	  6	  ]
[ 6@0,	  7	  ]
[ 7@0,	  8	  ]
[ 8@0,	  9	  ]
[ 9@0,	  10	  ]
#-----------------#
# h	t	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 4@0,	  4	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 9@0,	  9	  ]
#-----------------#
# h	t	  # name
# oid	lng	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  4	  ]
[ 3@0,	  9	  ]
[ 4@0,	  16	  ]
[ 5@0,	  25	  ]
[ 6@0,	  36	  ]
[ 7@0,	  49	  ]
[ 8@0,	  64	  ]
[ 9@0,	  81	  ]
#-----------------#
# h	t	  # name
# void	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]
[ 2@0,	  true	  ]
[ 3@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  true	  ]
[ 8@0,	  true	  ]
[ 9@0,	  true	  ]
#-----------------#
# h	t	  # name
# void	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]
[ 2@0,	  false	  ]
[ 3@0,	  false	  ]
[ 4@0,	  false	  ]
[ 5@0,	  false	  ]
[ 6@0,	  false	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  false	  ]
#-----------------#
# h	t	  # name
# void	bit	  # type
#-----------------#
[ 0@0,	  false	  ]
[ 1@0,	  false	  ]
[ 2@0,	  true	  ]
[ 3@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  true	  ]
[ 8@0,	  true	  ]
[ 9@0,	  true	  ]

# 19:09:39 >  
# 19:09:39 >  Done.
# 19:09:39 >  

