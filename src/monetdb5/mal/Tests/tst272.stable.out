stdout of test 'tst272` in directory 'monetdb5/mal` itself:


# 21:45:33 >  
# 21:45:33 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=47702 --set sql_port=53059 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst272.mal </dev/null
# 21:45:33 >  

# Monet Database Server V4.7.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##Same as tst270, but includes testing of the profiler trace
#
#profiler.activate("ticks");
##profiler.activate("pc");
#profiler.activate("statement");
#profiler.setFilter("*","insert");
#
#o:=oid(20000000);
#setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(:int,:int);
#profiler.startTrace();
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#print(b,b,b);
#profiler.stopTrace();
#t:= profiler.getTrace("ticks");
#print(t);
#s:= profiler.getTrace("statement");
#print(s);
#print(t,s);
#
function user.main():void;
#Same as tst270, but includes testing of the profiler trace 
    profiler.activate("ticks");
#profiler.activate("pc"); 
    profiler.activate("stmt");
    profiler.setFilter("*","append");
    o := calc.oid(20000000);
    calc.setoid(o);
    b := bat.new(:oid,:int);
#test basic functionality of the BAT library. 
#focussed on integers 
#it includes insertions,deletions,selections, and joins. 
    profiler.start();
    err := bat.append(b,15);
    err := bat.append(b,4);
    n0 := calc.int(nil);
    err := bat.append(b,n0);
    err := bat.append(b,16);
    err := bat.append(b,25);
    err := bat.append(b,36);
    err := bat.append(b,49);
    err := bat.append(b,64);
    err := bat.append(b,n0);
    err := bat.append(b,n0);
    err := bat.append(b,81);
    io.print(b);
    io.print(b,b,b);
    profiler.stop();
    io.printf("#~BeginVariableOutput~#\n");
    t := profiler.getTrace("ticks");
#io.print(t); 
    s := profiler.getTrace("stmt");
#io.print(s); 
#io.print(t,s); 
    io.printf("#~EndVariableOutput~#\n");
    profiler.cleanup();
end main;
# Start performance profiling
#-----------------#
# h	tmp_13	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  15	  ]
[ 1@0,	  4	  ]
[ 2@0,	  nil	  ]
[ 3@0,	  16	  ]
[ 4@0,	  25	  ]
[ 5@0,	  36	  ]
[ 6@0,	  49	  ]
[ 7@0,	  64	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  81	  ]
#---------------------------------#
# h	tmp_13	tmp_13	tmp_13	  # name
# int	int	int	int	  # type
#---------------------------------#
[ 0@0,	  15,	  15,	  15	  ]
[ 1@0,	  4,	  4,	  4	  ]
[ 2@0,	  nil,	  nil,	  nil	  ]
[ 3@0,	  16,	  16,	  16	  ]
[ 4@0,	  25,	  25,	  25	  ]
[ 5@0,	  36,	  36,	  36	  ]
[ 6@0,	  49,	  49,	  49	  ]
[ 7@0,	  64,	  64,	  64	  ]
[ 8@0,	  nil,	  nil,	  nil	  ]
[ 9@0,	  nil,	  nil,	  nil	  ]
[ 10@0,	  81,	  81,	  81	  ]
#~BeginVariableOutput~#
#~EndVariableOutput~#

# 21:45:33 >  
# 21:45:33 >  Done.
# 21:45:33 >  

