# now within a function to assure that reference counting
# takes care of releasing the variables.

function test();
    io.print("test");
    bbp.open();
    x:= bbp.getObjects();
    io.print(x);
    io.print("test");
    b:= bat.new(:oid,:int);
    bat.append(b,2);
    bbp.deposit("myfirstbat",b);
    c:= bbp.take("myfirstbat");
    io.print(c);
    bbp.close();
# at the end of the call, the BBP should have discarded
# the temporary bats of the user
end test;

user.test();
io.print("continue");
bbp.open();
x:= bbp.getObjects();
xr:= bat.reverse(x);
xp:= algebra.project(xr);
io.print(xp);
v:= bbp.take("myfirstbat");
io.print(v);
bbp.close();
