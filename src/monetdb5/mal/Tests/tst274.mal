# the multiplex code blocks.
#watch out, the random generator on SUN has a limited range.

r:= mmath.srand(0);
t0:= alarm.usec();
b:= bat.new(:oid,:lng);
barrier i:= 0:lng;
	k:= mmath.rand();
	l:= calc.lng(k);
	bat.insert(b,nil:oid,l);
	redo i:= iterator.next(1:lng,10000:lng);
exit i;

profiler.activate("ticks");
profiler.activate("stmt");
profiler.activate("rbytes");
profiler.activate("wbytes");
profiler.setAll();

profiler.start();
io.printf("#monitor \n");
mx:= aggr.max(b); 
mx:= mx+1;	#enforce an empty set later on
k1:=algebra.select(b,nil:lng,mx); 
k2:=algebra.select(b,mx,nil:lng); 
d:= mmath.sin(0.2:dbl);
profiler.stop();

stmt:= profiler.getTrace("stmt");
#io.print(stmt);
c := aggr.count(stmt);
io.print(c);
ticks:= profiler.getTrace("ticks");
#io.print(ticks);
c := aggr.count(ticks);
io.print(c);
rdbytes:= profiler.getTrace("rbytes");
io.print(rdbytes);
wrbytes:= profiler.getTrace("wbytes");
io.print(wrbytes);
io.print(rdbytes,wrbytes);
