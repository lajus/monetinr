stdout of test 'tst007` in directory 'monetdb5/mal` itself:


# 07:58:34 >  
# 07:58:34 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst007.mal </dev/null
# 07:58:34 >  

# MonetDB 5 server v11.12.0
# This is an unreleased version
# Serving database 'mTests_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:36213/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
# MonetDB/DataCell loaded
!TypeException:user.foo[16]:'entry_or_exittest' may not be used before being initialized
!TypeException:user.foo[29]:'booleanexpr' may not be used before being initialized
function user.foo():void;
    b := bat.new(:oid,:int);
barrier H := true;
    T := 1;
#body 
    redo H;
exit H;
# de andere loops zijn eenvoudig. 'goto' is altijd beperkt tot 
# 'randen' van het blok. (redo L, leave L) 
# een while loop 
barrier (h,t) := iterator.new(b);
    (h,t) := iterator.next(b);
    redo (h,t);
exit (h,t);
#een do-while loop 
    entry := true;
barrier M := entry_or_exittest;
    entry := false;
# rest 
    redo M;
exit M;
#een for-loop  
    i := 1;
barrier N := calc.<(i,10);
#body 
    i := calc.+(i,1);
    redo N;
exit N;
# de if-then en if-then-else constructies 
barrier FT := booleanexpr;
# thenpart 
exit FT;
barrier FTE := booleanexpr;
# thenpart 
exit FTE;
barrier FS := batcalc.not(FTE);
#elsepart 
exit FS;
end foo;
#
function user.main():void;
# A collection of forloops, which should not execute 
end main;

# 07:58:34 >  
# 07:58:34 >  Done.
# 07:58:34 >  

