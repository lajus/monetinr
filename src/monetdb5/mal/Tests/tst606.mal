# partial definition of the object space for MIL
# it is subordinate to the MIL space dealing with persistent bats
# CONST STORE_MEM   := 0; 
# CONST STORE_MMAP  := 1; 
# CONST STORE_COMPR := 2; 

module constants;

#the variables introduced in main are retained as globals
function main():void;
	STORE_MEM :=0;
	STORE_MMAP :=1;
	STORE_COMPR :=2;
	const.deposit("STORE_MEM",STORE_MEM);
	const.deposit("STORE_MAP",STORE_MMAP);
	const.deposit("STORE_COMPR",STORE_COMPR);
end main;

# take uses the 'root' versions.
function take(v:str):any_1;
	io.printf("looking for %s\n",v);
	w:= constants.take(v);
	return w;
end take;

# release is overloaded for testing only
function release(v:any_1):void;
	BoxException:= "releasing a constant is forbidden";
	raise BoxException;
end release;

# accept the definition of a new constant
function deposit(v:any_1,name:str) 
address space_deposit;

