stdout of test 'recycle12` in directory 'monetdb5/mal` itself:


# 18:50:02 >  
# 18:50:02 >   mserver5 "--config=/export/scratch1/milena/monet.DBG/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch1/milena/monet.DBG/lib/MonetDB5:/export/scratch1/milena/monet.DBG/lib/MonetDB5/lib:/export/scratch1/milena/monet.DBG/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch0/milena/var/dbfarm" --set "sql_logdir=/export/scratch0/milena/var/dblogs/logs/sql"  --set mapi_open=true --set xrpc_open=true --set mapi_port=30138 --set xrpc_port=44901 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle12.mal
# 18:50:02 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:33756/
##test the basics of the recycler
## testing query categories statistics
#
#function user.bind(s:str,t:str,c:str,i:int):bat[:oid,:int];
#	b:= bat.new(:oid,:int);
#	bat.insert(b,0@0,0);
#	bat.insert(b,1@0,1);
#	bat.insert(b,2@0,2);
#	bat.insert(b,3@0,3);
#	bat.insert(b,4@0,4);
#	bat.insert(b,5@0,5);
#	bat.insert(b,6@0,6);
#	bat.insert(b,7@0,7);
#	bat.insert(b,8@0,8);
#	bat.insert(b,9@0,9);
#	bat.insert(b,10@0,10);
#	bat.insert(b,11@0,11);
#	return bind:=b;
#end bind;
function user.bind(s:str,t:str,c:str,i:int):bat[:oid,:int];
    b := bat.new(:oid,:int);
    bat.insert(b,0@0,0);
    bat.insert(b,1@0,1);
    bat.insert(b,2@0,2);
    bat.insert(b,3@0,3);
    bat.insert(b,4@0,4);
    bat.insert(b,5@0,5);
    bat.insert(b,6@0,6);
    bat.insert(b,7@0,7);
    bat.insert(b,8@0,8);
    bat.insert(b,9@0,9);
    bat.insert(b,10@0,10);
    bat.insert(b,11@0,11);
    return bind := b;
end bind;
#
##intra-query commonality
#function qry(low:int, hgh:int);
#    b:= user.bind("schema","table","column",0);
#    s1:= algebra.select(b,low,hgh);
#    l1:= low + 1;
#    h1:= hgh - 1 ;
#    s2:= algebra.select(b,l1,h1);
#end qry;
function user.qry(low:int,hgh:int):void;
    b := user.bind("schema","table","column",0);
    s1 := algebra.select(b,low,hgh);
    l1 := calc.+(low,1);
    h1 := calc.-(hgh,1);
    s2 := algebra.select(b,l1,h1);
end qry;
#
##inter-query commonality
#function qry1(val:int);
#    b:= user.bind("schema","table","column1",0);
#    s1:= algebra.select(b,val);
#end qry1;
function user.qry1(val:int):void;
    b := user.bind("schema","table","column1",0);
    s1 := algebra.select(b,val);
end qry1;
#
#recycle.setRetainPolicy(1);
#recycle.setReusePolicy(1);
#recycle.setCachePolicy(3);
#optimizer.recycle("user","qry");
#optimizer.recycle("user","qry1");
#
#qry(2,8);
#qry1(10);
#qry1(10);
#
#recycle.dump();
##recycle.dump();
#
#
function user.main():void;
#test the basics of the recycler 
# testing query categories statistics 
#intra-query commonality 
#inter-query commonality 
    recycle.setAdmPolicy(1);
    recycle.setReusePolicy(1);
    recycle.setCachePolicy(1);
    user.qry(2,8);
    user.qry1(10);
    user.qry1(10);
    recycle.dump();
#recycle.dump(); 
end main;
#Query patterns 2
#Name	calls	globRec	locRec	Cat
#qry	1	0	1	0
#qry1	2	2	0	0

# 18:50:02 >  
# 18:50:02 >  Done.
# 18:50:02 >  

