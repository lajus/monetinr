# a simple dataflow test to check call methods.

function load():bat[:oid,:lng];
b:= bat.new(:oid,:lng);
k:=0;

INT_MAX := 2147483647;
dbgmsk_restore := mdb.getDebug();
dbgmsk_unset := 8+8388608;
dbgmsk_keep := calc.xor(INT_MAX,dbgmsk_unset);
dbgmsk_set := calc.and(dbgmsk_restore,dbgmsk_keep);
mdb.setDebug(dbgmsk_set);

barrier i:= 0:lng;
	k:= k+1;
	l:= calc.lng(k);
	bat.insert(b,nil:oid,l);
	redo i:= iterator.next(1:lng,1000000:lng);
exit i;

mdb.setDebug(dbgmsk_restore);

	return b;
end load;

function qry(z:bat[:oid,:lng],low:int,hgh:int):wrd;
	l:= calc.lng(low);
	h:= calc.lng(hgh);
	s:= algebra.select(z,l,h);
	c:= aggr.count(s);
	return qry:= c;
end qry;

s:= load();

t1:= 0:wrd;
t2:= 0:wrd;
t3:= 0:wrd;
t4:= 0:wrd;
c := 0:wrd;
barrier go:= language.dataflow();
	t1:= qry(s,1,100);
	t2:= qry(s,101,1000);
	t3:= qry(s,1001,10000);
	t4:= qry(s,10001,100000);
	c1:= t1+t3;
	c2:= t2+t4;
	c:= c1+c2;
exit go;
io.print(c);
io.print(t1);
io.print(t2);
io.print(t3);
io.print(t4);
