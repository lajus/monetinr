# Monet Database Server V4.5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## test proper exists
#	i:= 1;
#	j:= 2;
#barrier v:=i;
#	print("entered");
#	print(v);
#	redo v:= v -1;
#exit 	v;
#	print("doubles");
#barrier (v,w):=(i,j);
#	print("entered");
#	print(v);
#	v:= v-1;
#	redo (v,w):= (v,w);
#exit 	(v,w);
#
#	print("finished");
#
function Admin.main():int;	# 0  (main:int)
    i := 1;	# 1  (i:int)<-($2:int)
    j := 2;	# 2  (j:int)<-($4:int)
barrier v := i;	# 3  (v:int)<-(i:int) jump 7
    io.print("entered");	# 4 IOprint_val ($6:int)<-($7:str)
    io.print(v);	# 5 IOprint_val ($8:int)<-(v:int)
    redo v := calc.-(v,1);	# 6 CALCbinarySUBintint (v:int)<-(v:int)($2:int) jump 4
exit v;	# 7  (v:int)
    io.print("doubles");	# 8 IOprint_val ($9:int)<-($10:str)
barrier (v,w):= (i,j);	# 9  (v:int)(w:int)<-(i:int)(j:int) jump 14
    io.print("entered");	# 10 IOprint_val ($12:int)<-($7:str)
    io.print(v);	# 11 IOprint_val ($13:int)<-(v:int)
    v := calc.-(v,1);	# 12 CALCbinarySUBintint (v:int)<-(v:int)($2:int)
    redo (v,w):= (v,w);	# 13  (v:int)(w:int)<-(v:int)(w:int) jump 10
exit (v,w);	# 14  (v:int)(w:int)
    io.print("finished");	# 15 IOprint_val ($14:int)<-($15:str)
end main;	# 16  
[ "entered" ]
[ 1 ]
[ "entered" ]
[ 0 ]
[ "doubles" ]
[ "entered" ]
[ 1 ]
[ "entered" ]
[ 0 ]
[ "finished" ]
