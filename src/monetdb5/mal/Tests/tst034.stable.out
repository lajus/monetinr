stdout of test 'tst034` in directory 'monetdb5/mal` itself:


# 22:30:08 >  
# 22:30:08 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=37869 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst034.mal < /dev/null
# 22:30:08 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## test the reference counting scheme
#b:= bat.new(:int,:int);
#bat.insert(b,0,0);
#bat.insert(b,1,1);
#bat.insert(b,2,2);
#bat.insert(b,3,3);
#
#i:= bbp.getLRefCount(b);
#io.printf("start of selections %d [1]\n",i);
#z:= algebra.select(b,0,2); io.print(z);
#i:= bbp.getLRefCount(z);
#io.printf("z select %d [1]\n",i);
#i:= bbp.getLRefCount(b);
#io.printf("select %d [1]\n",i);
#z:= algebra.betweenCO(b,0,2); io.print(z);
#i:= bbp.getLRefCount(b);
#io.printf("select %d [1]\n",i);
#z:= algebra.betweenOC(b,0,2); io.print(z);
#z:= algebra.betweenOO(b,0,2); io.print(z);
#
function user.main():void;
# test the reference counting scheme 
    b := bat.new(:oid,:int);
    bat.append(b,0);
    bat.append(b,1);
    bat.append(b,2);
    bat.append(b,3);
    i := bbp.getLRefCount(b);
    io.printf("start of selections %d [1]\n",i);
    z := algebra.select(b,0,2);
    io.print(z);
    i := bbp.getLRefCount(z);
    io.printf("z select %d [1]\n",i);
    i := bbp.getLRefCount(b);
    io.printf("select %d [1]\n",i);
    z := algebra.select(b,0,2,true,false);
    io.print(z);
    i := bbp.getLRefCount(b);
    io.printf("select %d [1]\n",i);
    z := algebra.select(b,0,2,false,true);
    io.print(z);
    z := algebra.select(b,0,2,false,false);
    io.print(z);
end main;
start of selections 5 [1]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
z select 1 [1]
select 6 [1]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
select 6 [1]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1@0,	  1	  ]

# 22:30:08 >  
# 22:30:08 >  Done.
# 22:30:08 >  

