stdout of test 'tst960` in directory 'monetdb5/mal` itself:


# 23:37:05 >  
# 23:37:05 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=40158 --set sql_port=57521 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst960.mal </dev/null
# 23:37:05 >  

# Monet Database Server V4.7.1
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the chunk mechanism
#
#S:= new(:void,:str);
#setSequenceBase(S,0:oid);
#insert(S,nil,"hello");
#insert(S,nil,"brave");
#insert(S,nil,"new");
#insert(S,nil,"world");
#print(S);
#
#L:= batstr.length(S);
#print(L);
#L:= batstr.bytes(S);
#print(L);
#
#B:= batstr.==(S,"hello");
#print(B);
#
#B:= batstr.match(S,"hello");
#print(B);
#
#U:= batstr.toUpper(S);
#print(U);
#
#l:= batstr.toLower(U);
#print(l);
#
#trim:= batstr.trim(S); 
#print(trim);
#ltrim:= batstr.ltrim(S); 
#print(ltrim);
#rtrim:= batstr.rtrim(S); 
#print(rtrim);
#
#srch:= batstr.search(S,S); 
#io.print(srch);
#plus:= batcalc.+(S,S); 
#io.print(plus);
#
function user.main():void;
# the chunk mechanism 
    S := bat.new(:oid,:str);
    bat.append(S,"hello");
    bat.append(S,"brave");
    bat.append(S,"new");
    bat.append(S,"world");
    io.print(S);
    L := batstr.length(S);
    io.print(L);
    L := batstr.nbytes(S);
    io.print(L);
    B := batcalc.==(S,"hello");
    io.print(B);
    C := batstr.like_uselect(S,"hello");
    io.print(C);
    U := batstr.toUpper(S);
    io.print(U);
    l := batstr.toLower(U);
    io.print(l);
    trim := batstr.trim(S);
    io.print(trim);
    ltrim := batstr.ltrim(S);
    io.print(ltrim);
    rtrim := batstr.rtrim(S);
    io.print(rtrim);
    io.print("Start searches");
    srch := batstr.search(S,"hello");
    io.print(srch);
    srch := batstr.search(S,S);
    io.print(srch);
    plus := batcalc.+(S,S);
    io.print(plus);
end main;
#-------------------------#
# h	tmp_13		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "brave"	  ]
[ 2@0,	  "new"		  ]
[ 3@0,	  "world"	  ]
#-----------------#
# h	tmp_14	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  5	  ]
[ 1@0,	  5	  ]
[ 2@0,	  3	  ]
[ 3@0,	  5	  ]
#-----------------#
# h	tmp_15	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  5	  ]
[ 1@0,	  5	  ]
[ 2@0,	  3	  ]
[ 3@0,	  5	  ]
#-----------------#
# h	tmp_14	  # name
# void	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  false	  ]
[ 2@0,	  false	  ]
[ 3@0,	  false	  ]
#-----------------#
# h	tmp_16	  # name
# oid	bit	  # type
#-----------------#
[ 0@0,	  nil	  ]
#-------------------------#
# h	tmp_14		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "HELLO"	  ]
[ 1@0,	  "BRAVE"	  ]
[ 2@0,	  "NEW"		  ]
[ 3@0,	  "WORLD"	  ]
#-------------------------#
# h	tmp_17		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "brave"	  ]
[ 2@0,	  "new"		  ]
[ 3@0,	  "world"	  ]
#-------------------------#
# h	tmp_18		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "brave"	  ]
[ 2@0,	  "new"		  ]
[ 3@0,	  "world"	  ]
#-------------------------#
# h	tmp_19		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "brave"	  ]
[ 2@0,	  "new"		  ]
[ 3@0,	  "world"	  ]
#-------------------------#
# h	tmp_20		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "brave"	  ]
[ 2@0,	  "new"		  ]
[ 3@0,	  "world"	  ]
[ "Start searches" ]
#-----------------#
# h	tmp_21	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  -1	  ]
[ 2@0,	  -1	  ]
[ 3@0,	  -1	  ]
#-----------------#
# h	tmp_22	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  0	  ]
[ 2@0,	  0	  ]
[ 3@0,	  0	  ]
#-------------------------#
# h	tmp_22		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hellohello"	  ]
[ 1@0,	  "bravebrave"	  ]
[ 2@0,	  "newnew"	  ]
[ 3@0,	  "worldworld"	  ]

# 23:37:05 >  
# 23:37:05 >  Done.
# 23:37:05 >  

