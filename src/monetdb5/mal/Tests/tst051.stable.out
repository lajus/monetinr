stdout of test 'tst051` in directory 'monetdb5/mal` itself:


# 22:29:41 >  
# 22:29:41 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=34113 --set sql_port=49714 --set xquery_port=50869 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst051.mal < /dev/null
# 22:29:41 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing string stuff
#s:= "hello world";
#
#t:= str.string(s,0,2);	io.print(t);
#t:= str.string(s,-4,2);	io.print(t);
#t:= str.string(s,0,15);	io.print(t);
#t:= str.string(nil:str,0,15);	io.print(t);
#
#t:= str.string(s,5);	io.print(t);
#t:= str.prefix(s,4);	io.print(t);
#t:= str.suffix(s,4);	io.print(t);
#
#i:= str.locate(s,"hello"); io.print(i);
#i:= str.locate(s,"xyz"); io.print(i);
#i:= str.locate(s,nil:str); io.print(i);
#i:= str.locate(nil:str,"hello"); io.print(i);
#i:= str.locate(nil:str,"xyz"); io.print(i);
#i:= str.locate(nil:str,nil:str); io.print(i);
#
#t:= str.repeat("abc",3);	io.print(t);
#t:= str.repeat(nil:str,3);	io.print(t);
#
#t:= str.insert("hello world",5,1,"brave new "); io.print(t);
#t:= str.insert("",5,1,"brave new "); io.print(t);
#t:= str.insert(nil:str,5,1,"brave new "); io.print(t);
#t:= str.insert("",5,1,"brave new "); io.print(t);
#t:= str.insert("",0,1,"brave new "); io.print(t);
#t:= str.insert("hello world",5,1,""); io.print(t);
#t:= str.insert("hello world",5,1,nil:str); io.print(t);
#
#t:= str.replace("hello world","world","brave new world"); io.print(t);
#
#
function user.main():void;
# testing string stuff 
    s := "hello world";
    t := str.string(s,0,2);
    io.print(t);
    t := str.string(s,-4,2);
    io.print(t);
    t := str.string(s,0,15);
    io.print(t);
    t := str.string(nil:str,0,15);
    io.print(t);
    t := str.string(s,5);
    io.print(t);
    t := str.prefix(s,4);
    io.print(t);
    t := str.suffix(s,4);
    io.print(t);
    i := str.locate(s,"hello");
    io.print(i);
    i := str.locate(s,"xyz");
    io.print(i);
    i := str.locate(s,nil:str);
    io.print(i);
    i := str.locate(nil:str,"hello");
    io.print(i);
    i := str.locate(nil:str,"xyz");
    io.print(i);
    i := str.locate(nil:str,nil:str);
    io.print(i);
    t := str.repeat("abc",3);
    io.print(t);
    t := str.repeat(nil:str,3);
    io.print(t);
    t := str.insert("hello world",5,1,"brave new ");
    io.print(t);
    t := str.insert("",5,1,"brave new ");
    io.print(t);
    t := str.insert(nil:str,5,1,"brave new ");
    io.print(t);
    t := str.insert("",5,1,"brave new ");
    io.print(t);
    t := str.insert("",0,1,"brave new ");
    io.print(t);
    t := str.insert("hello world",5,1,"");
    io.print(t);
    t := str.insert("hello world",5,1,nil:str);
    io.print(t);
    t := str.replace("hello world","world","brave new world");
    io.print(t);
end main;
[ "he" ]
[ "or" ]
[ "hello world" ]
[ nil ]
[ " world" ]
[ "hell" ]
[ "orld" ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ "abcabcabc" ]
[ nil ]
[ "hellobrave new world" ]
[ "brave new " ]
[ nil ]
[ "brave new " ]
[ "brave new " ]
[ "helloworld" ]
[ nil ]
[ "hello brave new world" ]

# 22:29:41 >  
# 22:29:41 >  Done.
# 22:29:41 >  

