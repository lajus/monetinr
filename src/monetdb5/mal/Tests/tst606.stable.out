stdout of test 'tst606` in directory 'monetdb5/mal` itself:


# 08:01:25 >  
# 08:01:25 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst606.mal </dev/null
# 08:01:25 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## partial definition of the object space for MIL
## it is subordinate to the MIL space dealing with persistent bats
## CONST STORE_MEM   := 0; 
## CONST STORE_MMAP  := 1; 
## CONST STORE_COMPR := 2; 
#
#module constants;
#
##the variables introduced in main are retained as globals
#function main():void;
#	STORE_MEM :=0;
#	STORE_MMAP :=1;
#	STORE_COMPR :=2;
#	const.deposit(STORE_MEM);
#	const.deposit(STORE_MMAP);
#	const.deposit(STORE_COMPR);
#end main;
function constants.main():void;
    STORE_MEM := 0;
    STORE_MMAP := 1;
    STORE_COMPR := 2;
    const.deposit("STORE_MEM",STORE_MEM);
    const.deposit("STORE_MAP",STORE_MMAP);
    const.deposit("STORE_COMPR",STORE_COMPR);
end main;
#
## take uses the 'root' versions.
#function take(v:str):any;
#	printf("looking for %s\n",v);
#	w:= take(v);
#	return w;
#end take;
function constants.take(v:str):any_1;
    io.printf("looking for %s\n",v);
    w := constants.take(v);
    return take := w;
end take;
#
## release is overloaded for testing only
#function release(v:any):void;
#	BoxException:= "releasing a constant is forbidden";
#	raise BoxException;
#end release;
function constants.release(v:any_1):void;
    BoxException := "releasing a constant is forbidden";
    raise BoxException;
end release;
!SyntaxException:parseError:address space_deposit;
!SyntaxException:parseError:                    ^<address> not found
!SyntaxException:parseError:
!<identifier> expected
function constants.deposit(v:any_1,name:str):void;
    ;
end deposit;

# 08:01:25 >  
# 08:01:25 >  Done.
# 08:01:25 >  

