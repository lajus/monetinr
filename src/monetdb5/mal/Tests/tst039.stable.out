stdout of test 'tst039` in directory 'monetdb5/mal` itself:


# 07:58:43 >  
# 07:58:43 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst039.mal </dev/null
# 07:58:43 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## complex analysis
#
#function sample(nme:str, val:any):bit;
#   c := 2*3;
#   b := bbp.bind(nme);  #find a BAT
#   h := select(b,val,val);
#   t := count(h);
#   x := print(t);
#   y := print(val);
#   return sample:=true;
#end sample;
function user.sample(nme:str,val:any_1):bit;
    c := calc.*(2,3);
    b:bat[:void,:int]  := bbp.bind(nme);
#find a BAT 
    h := algebra.select(b,val,val);
    t := aggr.count(h);
    x := io.print(t);
    y := io.print(val);
    return sample := true;
end sample;
#
function user.main():void;
# complex analysis 
end main;

# 07:58:43 >  
# 07:58:43 >  Done.
# 07:58:43 >  

