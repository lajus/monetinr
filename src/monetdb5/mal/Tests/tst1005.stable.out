stdout of test 'tst1005` in directory 'monetdb5/mal` itself:


# 07:58:53 >  
# 07:58:53 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1005.mal </dev/null
# 07:58:53 >  



# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/fabian/scratch/monetdb/five/program-x86_64/etc/MonetDB5.conf
# dbfarm:/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the first of a series of BBP test cases
## make sure you can bind to a BAT through the box
#
#bbp.open();
#b:= new(:int,:int);
#insert(b,1,2);
#setName(b,"myfirstlocalbat");
#c:= bbp.bind("myfirstbat");
#print(c);
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
#bbp.open();
#v:= bbp.take("myfirstbat");
#catch MALException;
#	print(MALException);
#exit MALException;
#print("v");
#print(v);
#x:= bbp.getObjects();
#print("getObjects");
#print(x);
#bbp.close();
##catch MALException;
#	#print(MALException);
##exit MALException;
##print("done");
#
function user.main():void;
# the first of a series of BBP test cases 
# make sure you can bind to a BAT through the box 
    bbp.open();
    b := bat.new(:oid,:int);
    bat.append(b,2);
    bat.setName(b,"myfirstlocalbat");
    c := bbp.bind("myfirstbat");
    io.print(c);
    bbp.close();
# at the end of the session, the BBP should have discarded 
# the temporary bats of the user 
    bbp.open();
    v := bbp.take("myfirstbat");
catch MALException:str ;
    io.printf("%s\n",MALException);
exit MALException:str ;
    io.print("v");
    io.print(v);
    x := bbp.getObjects();
    io.print("getObjects");
    io.print(x);
    bbp.close();
end main;
MALException:bbp.bind:Object not found
[ "v" ]
[ nil ]
[ "getObjects" ]
#-------------------------#
# bbp	objects		  # name
# int	str		  # type
#-------------------------#

# 07:58:53 >  
# 07:58:53 >  Done.
# 07:58:53 >  

