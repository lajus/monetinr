stdout of test 'tst830` in directory 'monetdb5/mal` itself:


# 08:49:52 >  
# 08:49:52 >   mserver5 "--config=/ufs/mk/monet5//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=35798 --set xrpc_port=44801 --set monet_prompt= --trace  --dbname=mTests_src_mal  /ufs/mk/monet5/Linux/mTests/src/mal/tst830.mal
# 08:49:52 >  

# MonetDB server v5.13.0, based on kernel v1.31.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:35798/
function user.main():void;
# a simple functional test for the access control table 
# this should fail, the monetdb user is already there 
    pw := clients.backendsum("Pmonetdb");
    id := clients.addUser("monetdb",pw);
catch MALException:str ;
    io.printf("%s\n",MALException);
exit MALException:str ;
# should print 1@0 or something 
    id := clients.addUser("test",pw);
    io.print(id);
# this should work also 
    id := clients.addUser("checkpoint",pw);
    io.print(id);
# do a simple listing of users known 
    u := clients.getUsers();
    io.print(u);
# should work, we're the admin here 
    clients.removeUser("checkpoint");
# do a simple listing of users known 
    u := clients.getUsers();
    io.print(u);
# forcefully set the password of the user test 
    clients.setPassword("test",pw);
# now try to set the password for ourself, should fail 
    clients.setPassword("monetdb",pw);
catch InvalidCredentialsException:str ;
    io.printf("%s\n",InvalidCredentialsException);
exit InvalidCredentialsException:str ;
# change our own password 
    mypw := clients.backendsum("monetdb");
    clients.changePassword(mypw,pw);
# try it again, should fail... 
    clients.changePassword(mypw,pw);
catch InvalidCredentialsException:str ;
    io.printf("%s\n",InvalidCredentialsException);
    InvalidCredentialsException:str  := nil:str;
exit InvalidCredentialsException:str ;
# all should fail 
    clients.checkPermission("monetdb","Pmonetdb");
catch InvalidCredentialsException:str ;
    io.printf("%s\n",InvalidCredentialsException);
    InvalidCredentialsException:str  := nil:str;
exit InvalidCredentialsException:str ;
    clients.checkPermission("monetdb","x");
catch InvalidCredentialsException:str ;
    io.printf("%s\n",InvalidCredentialsException);
    InvalidCredentialsException:str  := nil:str;
exit InvalidCredentialsException:str ;
    clients.checkPermission("x","Pmonetdb");
catch InvalidCredentialsException:str ;
    io.printf("%s\n",InvalidCredentialsException);
    InvalidCredentialsException:str  := nil:str;
exit InvalidCredentialsException:str ;
end main;
MALException:addUser:user 'monetdb' already exists
[ 1@0 ]
[ 2@0 ]
#-------------------------#
# h	t		  # name
# oid	str		  # type
#-------------------------#
[ 0@0,	  "monetdb"	  ]
[ 1@0,	  "test"	  ]
[ 2@0,	  "checkpoint"	  ]
#-------------------------#
# h	t		  # name
# oid	str		  # type
#-------------------------#
[ 0@0,	  "monetdb"	  ]
[ 1@0,	  "test"	  ]
InvalidCredentialsException:setPassword:The administrator cannot set its own password, use changePassword instead
InvalidCredentialsException:changePassword:Access denied
InvalidCredentialsException:checkCredentials:invalid credentials for user 'monetdb'
InvalidCredentialsException:checkCredentials:invalid credentials for user 'monetdb'
InvalidCredentialsException:checkCredentials:invalid credentials for user 'x'

# 08:49:53 >  
# 08:49:53 >  Done.
# 08:49:53 >  

