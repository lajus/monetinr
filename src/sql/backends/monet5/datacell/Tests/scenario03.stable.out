stdout of test 'scenario03` in directory 'sql/backends/monet5/datacell` itself:


# 16:50:15 >  
# 16:50:15 >   mserver5  --debug=10 --set gdk_nr_threads=0  --set "gdk_dbfarm=/net/rig.ins.cwi.nl/export/scratch0/manegold/Monet/HG/Aug2011/prefix/--enable-datacell_--disable-debug_--enable-optimize_--disable-assert/var/MonetDB" --set mapi_open=true --set mapi_port=39781 --set monet_prompt= --trace --forcemito --set mal_listing=2  "--dbname=mTests_backends_monet5_datacell" --set mal_listing=0 ; echo ; echo Over..
# 16:50:15 >  

# MonetDB 5 server v11.5.0
# This is an unreleased version
# Serving database 'mTests_backends_monet5_datacell', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.749 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2013 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:39781/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/DataCell module loaded

Ready.
# SQL catalog created, loading sql scripts once

# 12:45:10 >  
# 12:45:10 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=vienna" "--port=38236"
# 12:45:10 >  

#set optimizer='datacell_pipe';
#create table datacell.bakin(
#    id integer,
#    tag timestamp,
#    payload integer
#);
#create table datacell.bakout( tag timestamp, cnt integer);
#select * from datacell.receptors(); select * from datacell.emitters(); select * from datacell.queries(); select * from datacell.baskets();
% .,	.,	.,	.,	.,	.,	.,	.,	.,	. # table_name
% nme,	host,	port,	protocol,	mode,	status,	lastseen,	cycles,	received,	pending # name
% clob,	clob,	int,	clob,	clob,	clob,	timestamp,	int,	int,	int # type
% 14,	9,	5,	3,	7,	7,	26,	1,	1,	1 # length
[ "datacell.bakin",	"localhost",	50503,	"TCP",	"passive",	"running",	NULL,	0,	0,	0	]
#select * from datacell.receptors(); select * from datacell.emitters(); select * from datacell.queries(); select * from datacell.baskets();
% .,	.,	.,	.,	.,	.,	.,	.,	.,	. # table_name
% nme,	host,	port,	protocol,	mode,	status,	lastsent,	cycles,	sent,	pending # name
% clob,	clob,	int,	clob,	clob,	clob,	timestamp,	int,	int,	int # type
% 15,	9,	5,	3,	6,	7,	26,	1,	1,	1 # length
[ "datacell.bakout",	"localhost",	50603,	"UDP",	"active",	"running",	NULL,	0,	0,	0	]
#select * from datacell.receptors(); select * from datacell.emitters(); select * from datacell.queries(); select * from datacell.baskets();
% .,	.,	.,	.,	.,	.,	.,	. # table_name
% nme,	status,	lastrun,	cycles,	events,	time,	error,	def # name
% clob,	clob,	timestamp,	int,	int,	bigint,	clob,	clob # type
% 14,	7,	26,	1,	1,	1,	0,	117 # length
[ "datacell.schep",	"running",	NULL,	0,	0,	0,	"",	"insert into datacell.bakout select now(), count(*) from datacell.bakin where datacell.threshold('datacell.bakin',15);"	]
#select * from datacell.receptors(); select * from datacell.emitters(); select * from datacell.queries(); select * from datacell.baskets();
% .,	.,	.,	.,	.,	.,	.,	.,	. # table_name
% nme,	threshold,	winsize,	winstride,	timeslice,	timestride,	beat,	seen,	events # name
% clob,	int,	int,	int,	int,	int,	int,	timestamp,	int # type
% 15,	1,	1,	1,	1,	1,	1,	26,	1 # length
[ "datacell.bakin",	0,	0,	0,	0,	0,	0,	NULL,	0	]
[ "datacell.bakout",	0,	0,	0,	0,	0,	0,	NULL,	0	]
#drop table datacell.bakin;
#drop table datacell.bakout;

# 12:45:10 >  
# 12:45:10 >  "Done."
# 12:45:10 >  

